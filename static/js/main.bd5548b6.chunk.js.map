{"version":3,"sources":["shared/baseUrl.js","components/Profile.js","components/navigation/Selection.js","components/navigation/Slider.js","components/navigation/Navigation.js","components/Filter.js","components/LoadingComponent.js","components/UserList.js","components/ImageCard.js","components/Upload.js","components/ContactComponent.js","components/Notification.js","components/HeaderComponent.js","components/Chatroom.js","components/Connected.js","redux/forms.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/info.js","redux/noties.js","redux/uchats.js","redux/profile.js","redux/favorites.js","redux/lusers.js","redux/auth.js","redux/users.js","App.js","redux/configureStore.js","registerServiceWorker.js","index.js"],"names":["baseUrl","Profile","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeIndex","next","bind","assertThisInitialized","previous","onExiting","onExited","setState","items","profile","gallery","animating","nextIndex","length","_this2","slides","map","item","react_default","a","createElement","reactstrap_es","className","key","src","alt","style","width","height","direction","directionText","onClickHandler","textAlign","firstname","lastname","age","fame","distance","display","keys","tags","tag","index","fontStyle","flexDirection","justifyContent","padding","listStyle","biography","last_login","like","onClick","postFavorite","JSON","parse","localStorage","creds","username","color","Component","Selection","_ref","genre","genres","onGenreChange","alignItems","value","onChange","name","id","Slider","range","type","data","label","_this$props$data","min","max","step","js_default","minValue","maxValue","React","Navigation","_this$props","comtags","components_navigation_Slider","components_navigation_Selection","Filter","event","target","setGenres","defineProperty","objectSpread","toggle","filter","dropdownOpen","alert","fetchFilter","fetchUsers","likelist","margin","isOpen","components_navigation_Navigation","assign","marginTop","e","handleSubmit","Loading","RenderUser","postBlacklist","user","concat","fetch","then","response","json","console","log","window","location","reload","catch","error","isModalOpen","toggleModal","checkProfile","method","body","stringify","headers","Content-Type","result","message","maxWidth","objectFit","overflow","preventDefault","confirm","components_Profile","Users","userlist","users","undefined","_id","UserList_RenderUser","isLoading","LoadingComponent_Loading","errMess","components_Filter","ImageCard","Date","date","toLocaleDateString","weekday","year","month","day","Uploader","images","onFormSubmit","onChangeProfile","onChangeGallery","fileUpload","files","FormData","x","append","mode","res","href","i","components_ImageCard","indexOf","replace","multiple","require","config","required","val","maxLength","len","validEmail","test","Contact","hideGPS","tagClick","info","ip","gps","loc","split","lat","lng","hideGps","_this3","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","values","postFeedback","_this4","Map","compose","withProps","googleMapURL","process","MAP_API","loadingElement","containerElement","mapElement","withScriptjs","withGoogleMap","react_google_maps_lib","defaultZoom","defaultCenter","t","latLng","renderTags","outline","active","lib","model","onSubmit","htmlFor","md","size","offset","block","getCurrentLocation","text","placeholder","defaultValue","validators","minLength","show","messages","select","gender","prefer","email","textarea","rows","Upload","Notification","fetchProfile","ok","Error","status","statusText","noti","bcolor","unread","borderColor","checkNoti","left","middle","object","image","from","heading","noties","comments","RenderNoti","io","chatnoti","Header","isNavOpen","isSignupOpen","chatrooms","toggleNav","toggleSignup","handleSignup","handleLogin","handleLogout","auth","isAuthenticated","str","on","fetchNoties","setItem","inChatroom","fetchUchat","loginUser","password","registerUser","removeAllListeners","logoutUser","Fragment","dark","expand","es","to","navbar","uchats","isFetching","innerRef","input","check","remember","Chatroom","readChat","chatId","chat","getChat","disconnect","messageList","comment","sent","onKeyPress","pushChat","document","getElementById","postDislike","isChatOpen","toggleChat","is_login","chatroom","dislike","components_Chatroom","activeTab","tab","connectedlist","connected","Connected_RenderUser","likedbylist","likedby","checkedbylist","checkedby","tabs","classnames","tabId","InitialFeedback","preference","InitialFilter","dispatch","usersLoading","addUsers","usersFailed","errmess","payload","infoLoading","infoFailed","addInfo","fetchFavorites","favoritesLoading","lusers","addFavorites","favoritesFailed","favorites","notiesLoading","notiesFailed","addNoties","chatIds","uchatLoading","reduce","b","addUchat","uchatFailed","uchat","Main","fetchInfo","PrivateRoute","component","rest","objectWithoutProperties","render","pathname","HeaderComponent","react_transition_group","classNames","timeout","exact","path","UserList","Connected_Users","Notification_Notification","ContactComponent","withRouter","connect","feedback","getState","requestLogin","success","token","receiveLogin","err","code","notiId","forEach","clear","actions","change","Info","arguments","action","Noties","Uchats","Favorites","Lusers","Auth","getItem","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","react_redux_es","MainComponent","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App_0","URL","origin","addEventListener","get","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"gaAAaA,EAAU,sCCoLRC,cAzKb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,YAAa,GAEfR,EAAKS,KAAOT,EAAKS,KAAKC,KAAVT,OAAAU,EAAA,EAAAV,CAAAD,IACZA,EAAKY,SAAWZ,EAAKY,SAASF,KAAdT,OAAAU,EAAA,EAAAV,CAAAD,IAChBA,EAAKa,UAAYb,EAAKa,UAAUH,KAAfT,OAAAU,EAAA,EAAAV,CAAAD,IACjBA,EAAKc,SAAWd,EAAKc,SAASJ,KAAdT,OAAAU,EAAA,EAAAV,CAAAD,IARCA,oFAYjBG,KAAKY,SAAS,CAAEC,MAAOb,KAAKJ,MAAMkB,QAAQC,8CAgB1Cf,KAAKgB,WAAY,qCAIjBhB,KAAKgB,WAAY,iCAIjB,IAAIhB,KAAKgB,UAAT,CACA,IAAMC,EACJjB,KAAKI,MAAMC,cAAgBL,KAAKI,MAAMS,MAAMK,OAAS,EACjD,EACAlB,KAAKI,MAAMC,YAAc,EAC/BL,KAAKY,SAAS,CAAEP,YAAaY,wCAI7B,IAAIjB,KAAKgB,UAAT,CACA,IAAMC,EACuB,IAA3BjB,KAAKI,MAAMC,YACPL,KAAKI,MAAMS,MAAMK,OAAS,EAC1BlB,KAAKI,MAAMC,YAAc,EAC/BL,KAAKY,SAAS,CAAEP,YAAaY,sCAGtB,IAAAE,EAAAnB,KACCK,EAAgBL,KAAKI,MAArBC,YAEFe,EAASpB,KAAKI,MAAMS,MAAMQ,IAAI,SAAAC,GAClC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,yBACVjB,UAAWS,EAAKT,UAChBC,SAAUQ,EAAKR,SACfiB,IAAKN,GAELC,EAAAC,EAAAC,cAAA,OACEI,IAAKnC,EAAU4B,EACfQ,IAAKR,EACLS,MAAO,CAAEC,MAAO,OAAQC,OAAQ,cAMxC,OACEV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+IAKAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACErB,YAAaA,EACbC,KAAMN,KAAKM,KACXG,SAAUT,KAAKS,UAEdW,EACDG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEQ,UAAU,OACVC,cAAc,WACdC,eAAgBpC,KAAKS,WAEvBc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEQ,UAAU,OACVC,cAAc,OACdC,eAAgBpC,KAAKM,QAGzBiB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG1B,KAAKJ,MAAMkB,QACVS,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQM,MAAO,CAAEM,UAAW,WAC1Bd,EAAAC,EAAAC,cAAA,UACGzB,KAAKJ,MAAMkB,QAAQwB,UADtB,IACkCtC,KAAKJ,MAAMkB,QAAQyB,SADrD,IACgE,IAC7DvC,KAAKJ,MAAMkB,QAAQ0B,KAEtBjB,EAAAC,EAAAC,cAAA,UACGzB,KAAKJ,MAAMkB,QAAQ2B,KADtB,OACgCzC,KAAKJ,MAAMkB,QAAQ4B,SAAU,IAD7D,UAKFnB,EAAAC,EAAAC,cAAA,MAAIM,MAAO,CAAEY,QAAS,SACnB7C,OAAO8C,KAAK5C,KAAKJ,MAAMkB,QAAQ+B,MAAMxB,IAAI,SAACyB,EAAKC,GAC9C,OAAI5B,EAAKvB,MAAMkB,QAAQ+B,KAAKC,GAExBvB,EAAAC,EAAAC,cAAA,KACEM,MAAO,CACLiB,UAAW,SACXL,QAAS,OACTM,cAAe,MACfC,eAAgB,SAChBlB,MAAO,OACPmB,QAAS,IACTC,UAAW,QAEbxB,IAAKmB,GAEJD,GAIE,MAIbvB,EAAAC,EAAAC,cAAA,KAAGM,MAAO,CAAEM,UAAW,WACpBrC,KAAKJ,MAAMkB,QAAQuC,UACpB9B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6BAAqBzB,KAAKJ,MAAMkB,QAAQwC,aAG1C/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,+BACQ,IAApB3B,KAAKJ,MAAM2D,KACVhC,EAAAC,EAAAC,cAAA,QACE+B,QAAS,WAIPrC,EAAKvB,MAAM6D,aAAa,CACtBC,KAAKC,MAAMC,aAAaC,OAAOC,SAC/B3C,EAAKvB,MAAMkB,QAAQgD,YAGvBnC,UAAU,uCACVI,MAAO,CAAEgC,MAAO,aAGlB,KAKN,iBAlKUC,4BCOPC,iBAZG,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,MAAOC,EAATF,EAASE,OAAQC,EAAjBH,EAAiBG,cAAjB,OAChB9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYI,MAAO,CAACuC,WAAW,WAC5C/C,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAQ8C,MAAOJ,EAAOK,SAAUH,GAE5BD,EAAO/C,IAAK,SAAA8C,GAAK,OACjB5C,EAAAC,EAAAC,cAAA,UAAQ8C,MAAOJ,EAAMM,KAAM7C,IAAKuC,EAAMO,IAAKP,EAAMM,8BCsB1CE,4NAxBbH,SAAW,SAAAI,GACT/E,EAAKD,MAAM4E,SAAS,CAClBK,KAAMhF,EAAKD,MAAMkF,KAAKC,MACtBR,MAAOK,6EAGF,IAAAI,EAEoChF,KAAKJ,MAAMkF,KAA5CG,EAFHD,EAEGC,IAAKC,EAFRF,EAEQE,IAAKC,EAFbH,EAEaG,KAAMZ,EAFnBS,EAEmBT,MAAOQ,EAF1BC,EAE0BD,MAC/B,OACExD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,aAAQsD,GACRxD,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACE6D,SAAUJ,EACVK,SAAUJ,EACVC,KAAMA,EACNX,SAAUxE,KAAKwE,SACfD,MAAOA,YAlBEgB,IAAMvB,YC6BZwB,mLAlBJ,IAAAC,EAC0EzF,KAAKJ,MAA9E8F,EADDD,EACCC,QAASvB,EADVsB,EACUtB,MAAOC,EADjBqB,EACiBrB,OAAQC,EADzBoB,EACyBpB,cAAeG,EADxCiB,EACwCjB,SAAUhC,EADlDiD,EACkDjD,IAAKC,EADvDgD,EACuDhD,KAAMC,EAD7D+C,EAC6D/C,SACpE,OACEnB,EAAAC,EAAAC,cAAA,WAASE,UAAU,cACjBJ,EAAAC,EAAAC,cAACkE,EAAD,CAAQb,KAAMtC,EAAKgC,SAAUA,IAC7BjD,EAAAC,EAAAC,cAACkE,EAAD,CAAQb,KAAMrC,EAAM+B,SAAUA,IAC9BjD,EAAAC,EAAAC,cAACkE,EAAD,CAAQb,KAAMpC,EAAU8B,SAAUA,IAClCjD,EAAAC,EAAAC,cAACkE,EAAD,CAAQb,KAAMY,EAASlB,SAAUA,IACjCjD,EAAAC,EAAAC,cAACmE,EAAD,CACEzB,MAAOA,EACPC,OAAQA,EACRC,cAAeA,YAvBAkB,IAAMvB,WC6EhB6B,sBA9Eb,SAAAA,EAAYjG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,IACjBhG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+F,GAAA1F,KAAAH,KAAMJ,KASRyE,cAAgB,SAAAyB,GACdjG,EAAKe,SAAS,CAAEuD,MAAO2B,EAAMC,OAAOxB,SAXnB1E,EAcnBmG,UAAY,SAAA5B,GACVvE,EAAKe,SAAS,CAAEwD,YAfCvE,EAkBnB2E,SAAW,SAAAM,GACTjF,EAAKe,SAALd,OAAAmG,EAAA,EAAAnG,CAAA,GACGgF,EAAKD,KADR/E,OAAAoG,EAAA,EAAApG,CAAA,GAEOD,EAAKO,MAAM0E,EAAKD,MAFvB,CAGIN,MAAOO,EAAKP,WApBhB1E,EAAKO,MAAQ,GACbP,EAAKsG,OAAStG,EAAKsG,OAAO5F,KAAZT,OAAAU,EAAA,EAAAV,CAAAD,IAHGA,oFAOjBG,KAAKY,SAALd,OAAAoG,EAAA,EAAApG,CAAA,GAAmBE,KAAKJ,MAAMwG,OAA9B,CAAsCC,cAAc,4CAqBxB,IAAxBzC,aAAa1C,OACfoF,MAAM,gBAENtG,KAAKJ,MAAM2G,YAAYvG,KAAKI,OAC5BJ,KAAKJ,MAAM4G,WAAX1G,OAAAoG,EAAA,EAAApG,CAAA,GACKE,KAAKI,MADV,CAEE0D,SAAUJ,KAAKC,MAAMC,aAAaC,OAAOC,SACzC2C,SAAUzG,KAAKJ,MAAM6G,SAASlD,0CAKlCvD,KAAKY,SAAS,CACZyF,cAAerG,KAAKI,MAAMiG,gDAIrB,IAAAlF,EAAAnB,KACP,OACEuB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYI,MAAO,CAAE2E,OAAQ,SAC1CnF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUiF,OAAQ3G,KAAKI,MAAMiG,aAAcF,OAAQnG,KAAKmG,QACtD5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBqC,MAAM,WAAtB,iBACAxC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcC,UAAU,eACtBJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,SAASI,MAAO,CAAEY,QAAS,SAC5CpB,EAAAC,EAAAC,cAACmF,EAAD9G,OAAA+G,OAAA,CACErC,SAAUxE,KAAKwE,SACfH,cAAerE,KAAKqE,eAChBrE,KAAKI,SAGbmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqC,MAAM,UACNhC,MAAO,CAAE+E,UAAW,OACpBtD,QAAS,SAAAuD,GACP5F,EAAK6F,iBAJT,uBA7DKhD,cCHRiD,EAAU,WACrB,OACE1F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,uCAChBJ,EAAAC,EAAAC,cAAA,4BCQAyF,cACJ,SAAAA,EAAYtH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkH,IACjBrH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoH,GAAA/G,KAAAH,KAAMJ,KAQRuH,cAAgB,SAAAC,GACd,GAAKxD,aAAaC,MAIhB,OADAyC,MAAK,QAAAe,OAASD,EAAT,kCACEE,MAAM5H,EAAO,4BAAA2H,OAA+BD,IAChDG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACJE,QAAQC,IAAI,iBAAkBH,GAC9BI,OAAOC,SAASC,WAEjBC,MAAM,SAAAC,GAAK,OAAIN,QAAQC,IAAIK,KAT9B1B,MAAM,6BATRzG,EAAKO,MAAQ,CACX6H,aAAa,GAEfpI,EAAKqI,YAAcrI,EAAKqI,YAAY3H,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAKsH,cAAgBtH,EAAKsH,cAAc5G,KAAnBT,OAAAU,EAAA,EAAAV,CAAAD,IACrBA,EAAKsI,aAAetI,EAAKsI,aAAa5H,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IAPHA,8EAyBW,IAAxB+D,aAAa1C,QACfoG,MAAM5H,EAAU,oBAAqB,CACnC0I,OAAQ,OACRC,KAAM3E,KAAK4E,UAAU,CACnBlB,KAAM1D,KAAKC,MAAMC,aAAaC,OAAOC,SACrCgB,KAAM9E,KAAKJ,MAAMwH,KAAKtD,WAExByE,QAAS,CACPC,eAAgB,sBAGjBjB,KAAK,SAAAkB,GAAM,OAAIA,EAAOhB,SACtBF,KAAK,SAAAkB,GACJf,QAAQC,IAAIc,EAAOC,iDAKzB1I,KAAKY,SAAS,CACZqH,aAAcjI,KAAKI,MAAM6H,qFAMpB,IAAA9G,EAAAnB,KACP,OACEuB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAO,CAAE4G,SAAU,UACvBpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,2BACVI,MAAO,CAAE6G,UAAW,SACpB3G,OAAO,QACP4G,SAAS,SACThH,IAAKnC,EAAUM,KAAKJ,MAAMwH,KAAKtG,QAC/BgB,IAAK9B,KAAKJ,MAAMwH,KAAKtD,SACrBN,QAAS,SAAAuD,GACPA,EAAE+B,iBACF3H,EAAKgH,eACLhH,EAAK+G,iBAGT3G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,UAAU,8BAClBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YACb3B,KAAKJ,MAAMwH,KAAKtD,SADnB,OACiC9D,KAAKJ,MAAMwH,KAAK5E,IADjD,KAGAjB,EAAAC,EAAAC,cAAA,QACE+B,QAAS,SAAAuD,GACPA,EAAE+B,iBACF3H,EAAKvB,MAAM6D,aAAa,CACtBtC,EAAKvB,MAAMkE,SACX3C,EAAKvB,MAAMwH,KAAKtD,YAGpBnC,UAAU,uCACVI,MAAO,CAAEgC,MAAO,aAGc,OAA/B/D,KAAKJ,MAAMwH,KAAK9D,WACf/B,EAAAC,EAAAC,cAAA,QACEE,UAAU,oDACV6B,QAAS,WAEPoE,OAAOmB,QACL,oDACG5H,EAAKgG,cAAchG,EAAKvB,MAAMwH,KAAKtD,aAW5C,MAKRvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiF,OAAQ3G,KAAKI,MAAM6H,YAAa9B,OAAQnG,KAAKkI,aAClD3G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAayE,OAAQnG,KAAKkI,aAA1B,WACA3G,EAAAC,EAAAC,cAACuH,EAAD,CACElI,QAASd,KAAKJ,MAAMwH,KACpB3D,aAAczD,KAAKJ,MAAM6D,aACzBF,MAAM,aAjHOS,aAoNViF,EA3DD,SAAArJ,GAEZ,IAAMsJ,EACyB,IAA7BtJ,EAAMuJ,MAAMA,MAAMjI,OAChBK,EAAAC,EAAAC,cAAA,kCAEA7B,EAAMuJ,MAAMA,MAAM9H,IAAI,SAAA+F,GACpB,YAAagC,IAAThC,GAA+B,OAATA,EAItB7F,EAAAC,EAAAC,cAAA,OACEG,IAAKwF,EAAKiC,IACV1H,UAAU,2CAEVJ,EAAAC,EAAAC,cAAC6H,EAAD,CACElC,KAAMA,EACN3D,aAAc7D,EAAM6D,aACpB0D,cAAevH,EAAMuH,cACrBrD,SAAUlE,EAAMkE,YAKf,KAKf,OAAIlE,EAAMuJ,MAAMI,UAEZhI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC+H,EAAD,QAIG5J,EAAMuJ,MAAMM,QAEnBlI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,UAAK7B,EAAMuJ,MAAMM,WAMrBlI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAACiI,EAAD,CACEtD,OAAQxG,EAAMwG,OACdI,WAAY5G,EAAM4G,WAClBC,SAAU7G,EAAM6G,SAChBF,YAAa3G,EAAM2G,cAErBhF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOuH,aCpMfS,mLArBX,OACEpI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAChBJ,EAAAC,EAAAC,cAAA,OAAKK,IAAK9B,KAAKJ,MAAMkC,IAAKD,IAAK7B,KAAKJ,MAAMiC,QAG9CN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cAAc,IAAIiI,KAAK5J,KAAKJ,MAAMiK,MAAMC,mBAAmB,QAAS,CAAEC,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,yBAbjI3E,IAAMvB,WC0IfmG,cAvIb,SAAAA,EAAYvK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmK,IACjBtK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqK,GAAAhK,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXU,QAAS,KACTC,QAAS,GACTqJ,OAAQ,MAGVvK,EAAKwK,aAAexK,EAAKwK,aAAa9J,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKyK,gBAAkBzK,EAAKyK,gBAAgB/J,KAArBT,OAAAU,EAAA,EAAAV,CAAAD,IACvBA,EAAK0K,gBAAkB1K,EAAK0K,gBAAgBhK,KAArBT,OAAAU,EAAA,EAAAV,CAAAD,IAXNA,oFAejBG,KAAKY,SAAS,CAAEwJ,OAAQpK,KAAKJ,MAAMmB,UACnC2G,QAAQC,IAAIjE,KAAK4E,UAAUtI,KAAKJ,6CAGrBmH,GACXA,EAAE+B,iBACF9I,KAAKwK,qDAGSzD,GACd/G,KAAKY,SAAS,CAAEE,QAASiG,EAAEhB,OAAO0E,MAAM,KACxC/C,QAAQC,IAAIZ,EAAEhB,OAAO0E,MAAM,IAC3B1D,EAAE+B,yDAEY/B,GACd/G,KAAKY,SAAS,CAAEG,QAASgG,EAAEhB,OAAO0E,QAClC/C,QAAQC,IAAI3H,KAAKI,OACjB2G,EAAE+B,sDAKF,IADA,IAAIhE,EAAO,IAAI4F,SACNC,EAAI,EAAGA,EAAI3K,KAAKI,MAAMW,QAAQG,OAAQyJ,IAC7C7F,EAAK8F,OAAO,UAAW5K,KAAKI,MAAMW,QAAQ4J,IAG5C7F,EAAK8F,OAAO,UAAW5K,KAAKI,MAAMU,SAClCgE,EAAK8F,OAAO,WAAY5K,KAAKJ,MAAMkE,UACnC4D,QAAQC,IAAI3H,KAAKI,OAGjBkH,MAFY5H,EAAU,QAEX,CACTmL,KAAM,UACNzC,OAAQ,OACRC,KAAMvD,IAELyC,KAAK,SAAAuD,GAAG,OAAIpD,QAAQC,IAAIjE,KAAK4E,UAAUwC,MACvCvD,KAAK,kBAAOK,OAAOC,SAASkD,KAAO,yDAG/B,IACHX,EADGjJ,EAAAnB,KAqBP,OAdEoK,EAJApK,KAAKI,MAAMgK,SAAW,IACtBpK,KAAKI,MAAMgK,QACXpK,KAAKI,MAAMgK,OAAOlJ,OAAS,EAElBlB,KAAKI,MAAMgK,OAAO/I,IAAI,SAAA2J,GAC7B,OACEzJ,EAAAC,EAAAC,cAACwJ,EAAD,CACErJ,IAAKT,EAAKf,MAAMgK,OAAOc,QAAQF,GAC/BlJ,IAAKkJ,EACLnJ,IAAKnC,EAAUsL,EACfnB,KAAMmB,EAAEG,QAAQ,gBAAiB,IAAIA,QAAQ,OAAQ,QAKlD5J,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,gBAITJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,WACjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,iBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sCACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,aACVkD,KAAK,OACLJ,KAAK,UACLD,SAAUxE,KAAKsK,kBALnB,UAQE/I,EAAAC,EAAAC,cAAA,SACEE,UAAU,aACVkD,KAAK,OACLJ,KAAK,UACL2G,UAAQ,EACR5G,SAAUxE,KAAKuK,kBAbnB,UAgBEhJ,EAAAC,EAAAC,cAAA,eAGJF,EAAAC,EAAAC,cAAA,WAkBAF,EAAAC,EAAAC,cAAA,UACEE,UAAU,oBACV6B,QAASxD,KAAKqK,aACdxF,KAAK,UAHP,WAQFtD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAAwByI,YAjI1B7E,IAAMvB,2BCO7BqH,EAAQ,KAAUC,SAElB,IAAMC,EAAW,SAAAC,GAAG,OAAIA,GAAOA,EAAItK,QAC7BuK,EAAY,SAAAC,GAAG,OAAI,SAAAF,GAAG,OAAKA,GAAOA,EAAItK,QAAUwK,IAGhDC,EAAa,SAAAH,GAAG,MAAI,4CAA4CI,KAAKJ,IA+X5DK,cA5Xb,SAAAA,EAAYjM,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6L,IACjBhM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+L,GAAA1L,KAAAH,KAAMJ,KACDQ,MAAQ,CAGX0L,SAAS,GAEXjM,EAAKkM,SAAWlM,EAAKkM,SAASxL,KAAdT,OAAAU,EAAA,EAAAV,CAAAD,IAPCA,oFAWjBG,KAAKY,SAALd,OAAAoG,EAAA,EAAApG,CAAA,GACKE,KAAKJ,MAAMoM,yCAIR,IAAA7K,EAAAnB,KACRsH,MAAM,qCACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAkB,GAEJnB,MAAK,qBAAAD,OAAsBoB,EAAOwD,GAA7B,+BACF1E,KAAK,SAAAkB,GAAM,OAAIA,EAAOhB,SACtBF,KAAK,SAAAkB,GACJ,IAAIyD,EAAMzD,EAAO0D,IAAIC,MAAM,KAC3BjL,EAAKP,SAAS,CAAEsL,IAAK,CAAEG,IAAKH,EAAI,GAAII,IAAKJ,EAAI,IAAMK,SAAS,MAG7DxE,MAAM,SAAAC,GAAK,OAAIN,QAAQC,IAAIK,wCAI3BlF,GACP9C,KAAKY,SAAS,CACZiC,KAAK/C,OAAAoG,EAAA,EAAApG,CAAA,GAAME,KAAKI,MAAMyC,KAAlB/C,OAAAmG,EAAA,EAAAnG,CAAA,GAAyBgD,GAAO9C,KAAKI,MAAMyC,KAAKC,kDAGrCiE,GAAG,IAAAyF,EAAAxM,KAChByM,UAAUC,YACZD,UAAUC,YAAYC,mBAAmB,SAAAC,GACvCJ,EAAK5L,SAAS,CACZsL,IAAK,CACHG,IAAKO,EAASC,OAAOC,SACrBR,IAAKM,EAASC,OAAOE,WAEvBR,SAAS,OAIbjF,MAAM,sBAAsBC,KAAK,SAAAkB,GAC/BnB,MAAK,qBAAAD,OAAsBoB,EAAOwD,GAA7B,+BAA6D1E,KAChE,SAAAkB,GAAM,OAAIf,QAAQC,IAAIc,OAG1BnC,MAAM,kDAERS,EAAE+B,sDAGSkE,GACXtF,QAAQC,IAAIqF,GACZhN,KAAKJ,MAAMqN,aAAXnN,OAAAoG,EAAA,EAAApG,CAAA,GACKkN,EADL,CAEEnK,KAAM7C,KAAKI,MAAMyC,KACjBiB,SAAU9D,KAAKJ,MAAMoM,KAAKlI,SAC1BoI,IAAKlM,KAAKI,MAAM8L,wCAIX,IA1EOR,EA0EPwB,EAAAlN,KACDmN,EAAMC,kBACVC,oBAAU,CACRC,aAAY,+CAAAjG,OAAiDkG,4DAAYC,QAA7D,8CACZC,eAAgBlM,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEE,OAAM,UACpCyL,iBAAkBnM,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEE,OAAM,WACtC0L,WAAYpM,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEE,OAAM,YAElC2L,eACAC,gBARUT,CASV,kBACA7L,EAAAC,EAAAC,cAACqM,EAAA,UAAD,CACEC,YAAa,GACbC,cAAed,EAAK9M,MAAM8L,IAC1B1I,QAAS,SAAAyK,GACPvG,QAAQC,IAAI,WAAajE,KAAK4E,UAAU2F,EAAEC,SAC1ChB,EAAKtM,SAAS,CACZsL,IAAK+B,EAAEC,WAIX3M,EAAAC,EAAAC,cAACqM,EAAA,OAAD,CAAQlB,SAAUM,EAAK9M,MAAM8L,SAI3BiC,EAAanO,KAAKI,MAAMyC,KAC1B/C,OAAO8C,KAAK5C,KAAKI,MAAMyC,MAAMxB,IAAI,SAAAyB,GAC/B,OACEvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEK,MAAO,CAAE2E,OAAQ,OACjB9E,IAAKkB,EACLnB,UAAU,WACVyM,SAAO,EACPrK,MAAM,UACNsK,OAAQnB,EAAK9M,MAAMyC,KAAKC,GACxBU,QAAS,WACP0J,EAAKnB,SAASjJ,KAGfA,KAIP,GACJ,OACEvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,8BAGJF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAC6M,EAAA,KAAD,CAAMC,MAAM,WAAWC,SAAU,SAAAxB,GAAM,OAAIE,EAAKlG,aAAagG,KAC3DzL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,SAASC,GAAI,GAA5B,iBAGoBtF,IAAnBpJ,KAAKI,MAAM8L,MAA4C,IAAvBlM,KAAKI,MAAMmM,QAC1ChL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,IACPnN,EAAAC,EAAAC,cAAC0L,EAAD,OAGF,GAEF5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,CAAEC,KAAM,GAAIC,OAAQ,IAC3BrN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEK,MAAO,CAAE2E,OAAQ,QACjB3C,MAAM,UACN4K,KAAK,KACLE,OAAK,EACLrL,QAAS,SAAAuD,GAAC,OAAImG,EAAK4B,mBAAmB/H,KALxC,gBASAxF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEK,MAAO,CAAE2E,OAAQ,QACjB3C,MAAM,UACN4K,KAAK,KACLE,OAAK,EACLrL,QAAS,WACP0J,EAAKX,YANT,mBAaJhL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,cACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,YAAYC,GAAI,GAA/B,cAGAnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,IACPnN,EAAAC,EAAAC,cAAC6M,EAAA,QAAQS,KAAT,CACER,MAAM,aACN7J,GAAG,YACHD,KAAK,YACLuK,YAAY,aACZrN,UAAU,eACVsN,aAAcjP,KAAKI,MAAMkC,UACzB4M,WAAY,CACV3D,WACA4D,WA/KFzD,EA+KuB,EA/KhB,SAAAF,GAAG,OAAIA,GAAOA,EAAItK,QAAUwK,IAgLjCD,UAAWA,EAAU,OAGzBlK,EAAAC,EAAAC,cAAC6M,EAAA,OAAD,CACE3M,UAAU,cACV4M,MAAM,aACNa,KAAK,UACLC,SAAU,CACR9D,SAAU,WACV4D,UAAW,oCACX1D,UAAW,qCAKnBlK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,cACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,WAAWC,GAAI,GAA9B,aAGAnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,IACPnN,EAAAC,EAAAC,cAAC6M,EAAA,QAAQS,KAAT,CACER,MAAM,YACN7J,GAAG,WACHD,KAAK,WACLuK,YAAY,YACZrN,UAAU,eACVsN,aAAcjP,KAAKI,MAAMmC,aAI/BhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,cACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,SAASC,GAAI,GAA5B,UAGAnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,IACPnN,EAAAC,EAAAC,cAAC6M,EAAA,QAAQgB,OAAT,CACEf,MAAM,UACN7J,GAAG,SACHD,KAAK,SACLwK,aAAcjP,KAAKI,MAAMmP,OACzB5N,UAAU,gBAEVJ,EAAAC,EAAAC,cAAA,UAAQ8C,MAAM,KACdhD,EAAAC,EAAAC,cAAA,UAAQ8C,MAAM,QAAd,QACAhD,EAAAC,EAAAC,cAAA,UAAQ8C,MAAM,UAAd,aAINhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,cACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,SAASC,GAAI,GAA5B,cAGAnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,IACPnN,EAAAC,EAAAC,cAAC6M,EAAA,QAAQgB,OAAT,CACEf,MAAM,UACN7J,GAAG,SACHD,KAAK,SACLwK,aAAcjP,KAAKI,MAAMoP,OACzB7N,UAAU,gBAEVJ,EAAAC,EAAAC,cAAA,UAAQ8C,MAAM,KACdhD,EAAAC,EAAAC,cAAA,UAAQ8C,MAAM,QAAd,QACAhD,EAAAC,EAAAC,cAAA,UAAQ8C,MAAM,UAAd,UACAhD,EAAAC,EAAAC,cAAA,UAAQ8C,MAAM,MAAd,gBAaNhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,cACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,MAAMC,GAAI,GAAzB,OAGAnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,IACPnN,EAAAC,EAAAC,cAAC6M,EAAA,QAAD,CACEC,MAAM,OACN7J,GAAG,MACHD,KAAK,MACLwK,aAAcjP,KAAKI,MAAMoC,IACzBb,UAAU,mBAIhBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,OAAOC,GAAI,GAA1B,QAGAnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,IAAKP,IAiDhB5M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,cACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,QAAQC,GAAI,GAA3B,SAGAnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,IACPnN,EAAAC,EAAAC,cAAC6M,EAAA,QAAQS,KAAT,CACER,MAAM,SACN7J,GAAG,QACHD,KAAK,QACLuK,YAAY,QACZrN,UAAU,eACVsN,aAAcjP,KAAKI,MAAMqP,MACzBP,WAAY,CACV3D,WACAI,gBAGJpK,EAAAC,EAAAC,cAAC6M,EAAA,OAAD,CACE3M,UAAU,cACV4M,MAAM,SACNa,KAAK,UACLC,SAAU,CACR9D,SAAU,WACVI,WAAY,6BAKpBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,cACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,YAAYC,GAAI,GAA/B,aAGAnN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,IACPnN,EAAAC,EAAAC,cAAC6M,EAAA,QAAQoB,SAAT,CACEnB,MAAM,aACN7J,GAAG,YACHD,KAAK,YACLkL,KAAK,KACLhO,UAAU,eACVsN,aAAcjP,KAAKI,MAAMiD,cAI/B9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,cACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKgN,GAAI,CAAEC,KAAM,GAAIC,OAAQ,IAC3BrN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQmD,KAAK,SAASd,MAAM,WAA5B,aAMJxC,EAAAC,EAAAC,cAACmO,EAAD,CACE7O,QACsB,OAApBf,KAAKJ,MAAMoM,KAAgBhM,KAAKJ,MAAMoM,KAAKjL,QAAU,KAEvD+C,SACsB,OAApB9D,KAAKJ,MAAMoM,KAAgBhM,KAAKJ,MAAMoM,KAAKlI,SAAW,eAnXhDE,aCdD6L,cACnB,SAAAA,EAAYjQ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6P,IACjBhQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+P,GAAA1P,KAAAH,KAAMJ,KAsBRkQ,aAAe,SAAAhM,GACb,OAAOwD,MAAM5H,EAAO,cAAA2H,OAAiBvD,IAClCyD,KACC,SAAAC,GACE,GAAIA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GAEE,MADc,IAAIgI,MAAMhI,EAAMU,WAIjCnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAzG,GAEJ4G,QAAQC,IAAI,YAAcjE,KAAK4E,UAAUxH,IACzCjB,EAAKe,SAAS,CAAEE,QAASA,IACzBjB,EAAKqI,gBAENH,MAAM,SAAAC,GAAK,OAAIN,QAAQC,IAAIK,EAAMU,YA/CpC7I,EAAKO,MAAQ,CACX6H,aAAa,EACbnH,QAAS,MAEXjB,EAAKqI,YAAcrI,EAAKqI,YAAY3H,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IANFA,iIAajBG,KAAKY,SAAS,CAAEE,QAASd,KAAKJ,MAAMkB,gDAKpCd,KAAKY,SAAS,CACZqH,aAAcjI,KAAKI,MAAM6H,iDAiClBkI,GAAM,IAAAhP,EAAAnB,KAEXoQ,EAASD,EAAKE,OAAS,UAAY,GAEvC,OACE9O,EAAAC,EAAAC,cAAA,OACEE,UAAU,OACVI,MAAO,CAAEuO,YAAaF,GACtB5M,QAAS,SAAAuD,GACHoJ,EAAKE,QAAQlP,EAAKvB,MAAM2Q,UAAUpP,EAAKvB,MAAMuQ,KAAK9G,IAAK8G,EAAKtG,MAChE9C,EAAE+B,mBAGJvH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoB,IAAI,MACTvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO8O,MAAI,EAACC,QAAM,GAChBlP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEK,MAAO,CAAEE,OAAQ,SACjByO,QAAM,EACN7O,IAAKnC,EAAUyQ,EAAKQ,MACpB7O,IAAKqO,EAAKS,QAGdrP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO2G,MAAI,EAAC1G,UAAU,QACpBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOmP,SAAO,GAAEV,EAAKS,MACrBrP,EAAAC,EAAAC,cAAA,SAAI0O,EAAKtL,MAETtD,EAAAC,EAAAC,cAAA,QACEE,UAAU,oCACVI,MAAO,CAAEgC,MAAO,WAChBP,QAAS,SAAAuD,GACP5F,EAAK2O,aAAaK,EAAKS,MAEvB7J,EAAE+B,wDAQP,IAAA0D,EAAAxM,KACD8Q,EACgB,OAApB9Q,KAAKJ,MAAMuQ,MAAqD,IAApCnQ,KAAKJ,MAAMuQ,KAAKY,SAAS7P,OACnDlB,KAAKJ,MAAMuQ,KAAKY,SAAS1P,IAAI,SAAA8O,GAC3B,OACE5O,EAAAC,EAAAC,cAAA,OACEG,IAAK4K,EAAK5M,MAAMuQ,KAAKY,SAAS7F,QAAQiF,GACtCxO,UAAU,eAET6K,EAAKwE,WAAWb,MAKvB5O,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAcI,MAAO,CAAE2E,OAAQ,SAA7C,mBAIJ,OACEnF,EAAAC,EAAAC,cAAA,WACGqP,EAEDvP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiF,OAAQ3G,KAAKI,MAAM6H,YAAa9B,OAAQnG,KAAKkI,aAClD3G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAayE,OAAQnG,KAAKkI,aAA1B,WACA3G,EAAAC,EAAAC,cAACuH,EAAD,CACElI,QAASd,KAAKI,MAAMU,QACpB2C,aAAczD,KAAKJ,MAAM6D,yBAxHGO,sCCgBpCmM,EAAOc,IAAGvR,EAAU,QACpBwR,EAAWD,IAAGvR,EAAU,YA+TfyR,cA5Tb,SAAAA,EAAYvR,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmR,IACjBtR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqR,GAAAhR,KAAAH,KAAMJ,KACDQ,MAAQ,CACX0D,SAAU,KACVsN,WAAW,EACXnJ,aAAa,EACboJ,cAAc,EACdC,UAAW,MAEbzR,EAAK0R,UAAY1R,EAAK0R,UAAUhR,KAAfT,OAAAU,EAAA,EAAAV,CAAAD,IACjBA,EAAKqI,YAAcrI,EAAKqI,YAAY3H,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAK2R,aAAe3R,EAAK2R,aAAajR,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAK4R,aAAe5R,EAAK4R,aAAalR,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAK6R,YAAc7R,EAAK6R,YAAYnR,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAK8R,aAAe9R,EAAK8R,aAAapR,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IAdHA,mFAiBC,IAAAsB,EAAAnB,KAClB,GAAIA,KAAKJ,MAAMgS,KAAKC,gBAAiB,CACnC,IAAIC,EAAM9R,KAAKJ,MAAMgS,KAAKxK,KAAKtD,SAC/BqM,EAAK4B,GAAGD,EAAK,SAAAhN,GACXwB,MAAMxB,GACN3D,EAAKvB,MAAMoS,YAAYtO,KAAKC,MAAMC,aAAaC,OAAOC,iEAYhC,IAAA0I,EAAAxM,KAC1B,GAC2B,OAAzBA,KAAKI,MAAMkR,WACc,OAAzBtR,KAAKJ,MAAM0R,gBACclI,IAAzBpJ,KAAKJ,MAAM0R,UACX,CACA,IAAIA,EAAYxR,OAAOkN,OAAOhN,KAAKJ,MAAM0R,WAEzCtR,KAAKY,SAAS,CAAE0Q,cAChB1N,aAAaqO,QAAQ,YAAaX,GAElC,IAAIQ,EAAM9R,KAAKJ,MAAMgS,KAAKxK,KAAKtD,SAC/BoN,EAASa,GAAGD,EAAK,SAAAhN,GAEiB,UAA5BlB,aAAasO,YACf1F,EAAK5M,MAAMuS,WAAWb,0FAS5BtR,KAAKY,SAAS,CACZwQ,WAAYpR,KAAKI,MAAMgR,kDAKzBpR,KAAKY,SAAS,CACZqH,aAAcjI,KAAKI,MAAM6H,qDAK3BjI,KAAKY,SAAS,CACZyQ,cAAerR,KAAKI,MAAMiR,mDAIlBvL,GACV9F,KAAKkI,cACLlI,KAAKJ,MAAMwS,UAAU,CACnBtO,SAAU9D,KAAK8D,SAASS,MACxB8N,SAAUrS,KAAKqS,SAAS9N,QAE1BuB,EAAMgD,sDAGKhD,GACX9F,KAAKwR,eACLxR,KAAKJ,MAAM0S,aAAa,CACtBxO,SAAU9D,KAAK8D,SAASS,MACxB8N,SAAUrS,KAAKqS,SAAS9N,MACxBjC,UAAWtC,KAAKsC,UAAUiC,MAC1BhC,SAAUvC,KAAKuC,SAASgC,MACxBkL,MAAOzP,KAAKyP,MAAMlL,QAEpBuB,EAAMgD,wDAINqH,EAAKoC,qBACLrB,EAASqB,qBACTvS,KAAKJ,MAAM4S,8CAGJ,IAAAtF,EAAAlN,KACP,OACEuB,EAAAC,EAAAC,cAACF,EAAAC,EAAMiR,SAAP,KAEElR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgR,MAAI,EAACC,OAAO,MAClBpR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAe8B,QAASxD,KAAKuR,YAS7BhQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaC,UAAU,UAAUoJ,KAAK,KACpCxJ,EAAAC,EAAAC,cAAA,OACEI,IAAI,yBACJI,OAAO,KACPD,MAAM,KACNF,IAAI,0BAENP,EAAAC,EAAAC,cAACmR,EAAA,EAAD,CAASjR,UAAU,WAAWkR,GAAG,WAEnCtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUiF,OAAQ3G,KAAKI,MAAMgR,UAAW0B,QAAM,GAC5CvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKoR,QAAM,GACTvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACmR,EAAA,EAAD,CAASjR,UAAU,WAAWkR,GAAG,SAC/BtR,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBADlB,aAEEJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBACS,IAAtB3B,KAAKJ,MAAMmT,OAAe/S,KAAKJ,MAAMmT,OAAS,MAIrDxR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACmR,EAAA,EAAD,CAASjR,UAAU,WAAWkR,GAAG,SAC/BtR,EAAAC,EAAAC,cAAA,QAAME,UAAU,qBADlB,iBAEEJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBACS,IAAtB3B,KAAKJ,MAAMyQ,OAAerQ,KAAKJ,MAAMyQ,OAAS,MAIrD9O,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACmR,EAAA,EAAD,CAASjR,UAAU,WAAWkR,GAAG,cAC/BtR,EAAAC,EAAAC,cAAA,QAAME,UAAU,6BADlB,cAKJJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAUmR,QAAM,GAC7BvR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACI1B,KAAKJ,MAAMgS,KAAKC,gBAgChBtQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACZ3B,KAAKJ,MAAMgS,KAAKxK,KAAKtD,UAExBvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ0M,SAAO,EAAC5K,QAASxD,KAAK2R,cAC5BpQ,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBADlB,UAEG3B,KAAKJ,MAAMgS,KAAKoB,WACfzR,EAAAC,EAAAC,cAAA,QAAME,UAAU,iCACd,OAvCRJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,SAAO,EACP5K,QAASxD,KAAKkI,YACdnG,MAAO,CACL2E,OAAQ,OACR3C,MAAO,UACPuM,YAAa,gBAGf/O,EAAAC,EAAAC,cAAA,QAAME,UAAU,wBATlB,SAUG3B,KAAKJ,MAAMgS,KAAKoB,WACfzR,EAAAC,EAAAC,cAAA,QAAME,UAAU,iCACd,MAENJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0M,SAAO,EACP5K,QAASxD,KAAKwR,aACdzP,MAAO,CACL2E,OAAQ,OACR3C,MAAO,UACPuM,YAAa,gBAGf/O,EAAAC,EAAAC,cAAA,QAAME,UAAU,wBATlB,UAUG3B,KAAKJ,MAAMgS,KAAKoB,WACfzR,EAAAC,EAAAC,cAAA,QAAME,UAAU,iCACd,YAsBpBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,qBACnBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAACmR,EAAA,EAAD,CACEjR,UAAU,WACVkR,GAAG,QACH9Q,MAAO,CAAEgC,MAAO,gBAEhBxC,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,kCAMVF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiF,OAAQ3G,KAAKI,MAAM6H,YAAa9B,OAAQnG,KAAKkI,aAClD3G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAayE,OAAQnG,KAAKkI,aAA1B,SACA3G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8M,SAAUxO,KAAK0R,aACnBnQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,YAAf,YACAlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmD,KAAK,OACLH,GAAG,WACHD,KAAK,WACLwO,SAAU,SAAAC,GAAK,OAAKhG,EAAKpJ,SAAWoP,MAGxC3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,YAAf,YACAlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmD,KAAK,WACLH,GAAG,WACHD,KAAK,WACLwO,SAAU,SAAAC,GAAK,OAAKhG,EAAKmF,SAAWa,MAGxC3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWyR,OAAK,GACd5R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyR,OAAK,GACV5R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmD,KAAK,WACLJ,KAAK,WACLwO,SAAU,SAAAC,GAAK,OAAKhG,EAAKkG,SAAWF,KAJxC,gBASF3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQmD,KAAK,SAASN,MAAM,SAASR,MAAM,WAA3C,YAMNxC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiF,OAAQ3G,KAAKI,MAAMiR,aAAclL,OAAQnG,KAAKwR,cACnDjQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAayE,OAAQnG,KAAKwR,cAA1B,UACAjQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8M,SAAUxO,KAAKyR,cACnBlQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,YAAf,YACAlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmD,KAAK,OACLH,GAAG,WACHD,KAAK,WACLwO,SAAU,SAAAC,GAAK,OAAKhG,EAAKpJ,SAAWoP,MAGxC3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,YAAf,YACAlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmD,KAAK,WACLH,GAAG,WACHD,KAAK,WACLwO,SAAU,SAAAC,GAAK,OAAKhG,EAAKmF,SAAWa,MAGxC3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,YAAf,cACAlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmD,KAAK,OACLH,GAAG,YACHD,KAAK,YACLwO,SAAU,SAAAC,GAAK,OAAKhG,EAAK5K,UAAY4Q,MAGzC3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,YAAf,aACAlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmD,KAAK,OACLH,GAAG,WACHD,KAAK,WACLwO,SAAU,SAAAC,GAAK,OAAKhG,EAAK3K,SAAW2Q,MAGxC3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+M,QAAQ,YAAf,SACAlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmD,KAAK,QACLH,GAAG,QACHD,KAAK,QACLwO,SAAU,SAAAC,GAAK,OAAKhG,EAAKuC,MAAQyD,MAGrC3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQmD,KAAK,SAASN,MAAM,SAASR,MAAM,WAA3C,qBAlTOC,aCmINqP,cAlJb,SAAAA,EAAYzT,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqT,IACjBxT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuT,GAAAlT,KAAAH,KAAMJ,KA2BR0T,SAAW,WACT,OAAOhM,MAAM5H,EAAO,sBAAA2H,OAAyBxH,EAAKD,MAAM2T,SACrDhM,KACC,SAAAC,GACE,GAAIA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GAEE,MADc,IAAIgI,MAAMhI,EAAMU,WAIjCnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,MAILO,MAAM,SAAAC,GAAK,OAAIN,QAAQC,IAAIK,EAAMU,YAlDpC7I,EAAKO,MAAQ,CACX2Q,SAAU,IAHKlR,wEAOV6I,GACP,OAAOpB,MAAM5H,EAAU,QAAUM,KAAKJ,MAAM2T,OAAQ,CAClDnL,OAAQ,MACRC,KAAM3E,KAAK4E,UAAU,CACnBsI,KAAMlN,KAAKC,MAAMC,aAAaC,OAAOC,SACrC+O,GAAI7S,KAAKJ,MAAMiT,GACfnK,QAASA,IAEXH,QAAS,CACPC,eAAgB,sBAGjBjB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,MAGLO,MAAM,SAAAC,GACLN,QAAQC,IAAIK,uCA+BR,IAAA7G,EAAAnB,KACR,OAAOsH,MAAM5H,EAAU,QAAUM,KAAKJ,MAAM2T,QACzChM,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAEJrG,EAAKP,SAAS,CAAEmQ,SAAUvJ,EAASuJ,aAEpChJ,MAAM,SAAAC,GACLN,QAAQC,IAAIK,kDAKhBN,QAAQC,IAAI,SAAW3H,KAAKJ,MAAM2T,QAClCvT,KAAKY,SAAS,CAAE4S,KAAMvC,IAAGvR,EAAU,UACnCM,KAAKyT,UACLzT,KAAKsT,WACL1P,aAAasO,YAAa,8CAGR,IAAA1F,EAAAxM,KAClBA,KAAKI,MAAMoT,KAAKzB,GAAG/R,KAAKJ,MAAM2T,OAAQ,SAAAzO,GACpC4C,QAAQC,IAAR,YAAAN,OAAwBmF,EAAK5M,MAAM2T,OAAnC,WAAAlM,OAAmDvC,IAC/CA,EAAKsH,MAAM,KAAK,KAAO1I,KAAKC,MAAMC,aAAaC,OAAOC,WACxD4D,QAAQC,IAAI,qBACZ6E,EAAK8G,YAEP9G,EAAKiH,2DAMPzT,KAAKI,MAAMoT,KAAKE,aAChBhM,QAAQC,IAAI/D,aAAa0N,UAAUlF,MAAM,MACzCpM,KAAKJ,MAAMuS,WAAWvO,aAAa0N,UAAUlF,MAAM,MAEnDxI,aAAasO,YAAa,mCAGnB,IAAAhF,EAAAlN,KAED2T,EAAc3T,KAAKI,MAAM2Q,SAAS1P,IAAI,SAAAuS,GAC1C,IAAIC,EAAO,+BAIX,OAHID,EAAQf,KAAO3F,EAAKtN,MAAMiT,KAC5BgB,EAAO,4BAGPtS,EAAAC,EAAAC,cAAA,OAAKG,IAAKgS,EAAQ/J,KAAMlI,UAAU,cAChCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAWkS,GACdtS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAoBiS,EAAQlL,aAKnD,OACEnH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,mBACnBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBgS,GAClCpS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,SACEiD,GAAG,YACHG,KAAK,OACLmK,YAAY,mBACZrN,UAAU,sBAIVmS,WAAY,SAAAhO,GACQ,UAAdA,EAAMlE,MACRsL,EAAK6G,SAASjO,EAAMC,OAAOxB,OAE3ByP,SAASC,eAAe,aAAa1P,MAAQ,KAGjDA,MAAOvE,KAAKI,MAAMsI,mBAlIP1E,6BCajBkD,cACJ,SAAAA,EAAYtH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkH,IACjBrH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoH,GAAA/G,KAAAH,KAAMJ,KA0BRsU,YAAc,SAAA9M,GAEZ,OAAOE,MACL5H,EAAO,0BAAA2H,OAA6BD,EAAK,GAAlC,aAAAC,OAAgDD,EAAK,KAE3DG,KAAK,SAAAC,GACJE,QAAQC,IAAI,WAAaH,EAASC,QAClCG,OAAOC,SAASC,WAEjBC,MAAM,SAAAC,GAAK,OAAIN,QAAQC,IAAIK,MAlC9BnI,EAAKO,MAAQ,CACX6H,aAAa,EACbkM,YAAY,GAEdtU,EAAKqI,YAAcrI,EAAKqI,YAAY3H,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAKuU,WAAavU,EAAKuU,WAAW7T,KAAhBT,OAAAU,EAAA,EAAAV,CAAAD,IAClBA,EAAKqU,YAAcrU,EAAKqU,YAAY3T,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IARFA,6EAajBG,KAAKY,SAAS,CACZqH,aAAcjI,KAAKI,MAAM6H,mDAS3BjI,KAAKY,SAAS,CACZuT,YAAanU,KAAKI,MAAM+T,8CAenB,IAAAhT,EAAAnB,KACHoQ,EAASpQ,KAAKJ,MAAMwH,KAAKiN,SAAW,UAAY,GAEpD,OACE9S,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,MAAO,CAAE4G,SAAU,QAAS2H,YAAaF,IAC7C7O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,2BACVM,OAAO,QACP4G,SAAS,SACT9G,MAAO,CAAE6G,UAAW,SACpB/G,IAAKnC,EAAUM,KAAKJ,MAAMwH,KAAKtG,QAC/BgB,IAAK9B,KAAKJ,MAAMwH,KAAKtD,SACrBN,QAAS,SAAAuD,GACPA,EAAE+B,iBACF3H,EAAK+G,iBAGT3G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,UAAU,8BAClBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAY3B,KAAKJ,MAAMwH,KAAKtD,UAC3C9D,KAAKJ,MAAM0U,SACV/S,EAAAC,EAAAC,cAAA,QACEE,UAAU,0CACV6B,QAAS,SAAAuD,GACPA,EAAE+B,iBACF3H,EAAKiT,eAIP7S,EAAAC,EAAAC,cAAA,QACEE,UAAU,gCACVI,MAAO,CAAEE,OAAQ,SAEhBjC,KAAKJ,MAAMmT,QAC+B,IAA3C/S,KAAKJ,MAAMmT,OAAO/S,KAAKJ,MAAM0U,UACzBtU,KAAKJ,MAAMmT,OAAO/S,KAAKJ,MAAM0U,UAC7B,KAIR,GAEDtU,KAAKJ,MAAM2D,KACVhC,EAAAC,EAAAC,cAAA,QACE+B,QAAS,SAAAuD,GACPA,EAAE+B,iBACF3H,EAAKvB,MAAM6D,aAAa,CACtBC,KAAKC,MAAMC,aAAaC,OAAOC,SAC/B3C,EAAKvB,MAAMwH,KAAKtD,YAGpBnC,UAAU,uCACVI,MAAO,CAAEgC,MAAO,aAGlB,GAED/D,KAAKJ,MAAM2U,QACVhT,EAAAC,EAAAC,cAAA,QACEE,UAAU,uCACV6B,QAAS,SAAAuD,GACPA,EAAE+B,iBACF3H,EAAK+S,YAAY,CACfxQ,KAAKC,MAAMC,aAAaC,OAAOC,SAC/B3C,EAAKvB,MAAMwH,KAAKtD,cAKtB,MAKRvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiF,OAAQ3G,KAAKI,MAAM6H,YAAa9B,OAAQnG,KAAKkI,aAClD3G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAayE,OAAQnG,KAAKkI,aAA1B,WACA3G,EAAAC,EAAAC,cAACuH,EAAD,CACElI,QAASd,KAAKJ,MAAMwH,KACpB3D,aAAczD,KAAKJ,MAAM6D,aACzBF,KAAMvD,KAAKJ,MAAM2D,QAGrBhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiF,OAAQ3G,KAAKI,MAAM+T,WAAYhO,OAAQnG,KAAKoU,YACjD7S,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAayE,OAAQnG,KAAKoU,WAAYzS,UAAU,aAAhD,QAGAJ,EAAAC,EAAAC,cAAC+S,EAAD,CACEjB,OAAQvT,KAAKJ,MAAM0U,SACnBzB,GAAI7S,KAAKJ,MAAMwH,KAAKtD,SACpBqO,WAAYnS,KAAKJ,MAAMuS,sBAnIVnO,aA2IJiF,cACnB,SAAAA,EAAYrJ,GAAO,IAAA4M,EAAA,OAAA1M,OAAAC,EAAA,EAAAD,CAAAE,KAAAiJ,IACjBuD,EAAA1M,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmJ,GAAA9I,KAAAH,KAAMJ,KAEDuG,OAASqG,EAAKrG,OAAO5F,KAAZT,OAAAU,EAAA,EAAAV,CAAA0M,IACdA,EAAKpM,MAAQ,CACXqU,UAAW,KALIjI,sEAoBZkI,GACD1U,KAAKI,MAAMqU,YAAcC,GAC3B1U,KAAKY,SAAS,CACZ6T,UAAWC,qCAIR,IAAAxH,EAAAlN,KAED2U,OAC2BvL,IAA/BpJ,KAAKJ,MAAMuJ,MAAMyL,UACb5U,KAAKJ,MAAMuJ,MAAMyL,UAAUvT,IAAI,SAAA+F,GAC7B,OACE7F,EAAAC,EAAAC,cAAA,OACEG,IAAKwF,EAAKiC,IACV1H,UAAU,wCAEVJ,EAAAC,EAAAC,cAACoT,EAAD,CACEzN,KAAMA,EACN3D,aAAcyJ,EAAKtN,MAAM6D,aACzBK,SAAUoJ,EAAKtN,MAAMkE,SACrBwQ,SAAUpH,EAAKtN,MAAM0R,UAAUlK,EAAKtD,UACpCqO,WAAYjF,EAAKtN,MAAMuS,WACvBY,OAAQ7F,EAAKtN,MAAMmT,OACnBxP,MAAM,EACNgR,SAAS,OAKjB,KACAO,OACyB1L,IAA7BpJ,KAAKJ,MAAMuJ,MAAM4L,QACb/U,KAAKJ,MAAMuJ,MAAM4L,QAAQ1T,IAAI,SAAA+F,GAC3B,OACE7F,EAAAC,EAAAC,cAAA,OACEG,IAAKwF,EAAKiC,IACV1H,UAAU,wCAEVJ,EAAAC,EAAAC,cAACoT,EAAD,CACEzN,KAAMA,EACN3D,aAAcyJ,EAAKtN,MAAM6D,aACzBK,SAAUoJ,EAAKtN,MAAMkE,SACrBP,MAAM,EACNgR,SAAS,OAKjB,KACA9N,OACsB2C,IAA1BpJ,KAAKJ,MAAMuJ,MAAM5F,KACbvD,KAAKJ,MAAMuJ,MAAM5F,KAAKlC,IAAI,SAAA+F,GACxB,OACE7F,EAAAC,EAAAC,cAAA,OACEG,IAAKwF,EAAKiC,IACV1H,UAAU,wCAEVJ,EAAAC,EAAAC,cAACoT,EAAD,CACEzN,KAAMA,EACN3D,aAAcyJ,EAAKtN,MAAM6D,aACzBK,SAAUoJ,EAAKtN,MAAMkE,SACrByQ,SAAS,OAKjB,KACAS,OAC2B5L,IAA/BpJ,KAAKJ,MAAMuJ,MAAM8L,UACbjV,KAAKJ,MAAMuJ,MAAM8L,UAAU5T,IAAI,SAAA+F,GAC7B,OACE7F,EAAAC,EAAAC,cAAA,OACEG,IAAKwF,EAAKiC,IACV1H,UAAU,wCAEVJ,EAAAC,EAAAC,cAACoT,EAAD,CACEzN,KAAMA,EACN3D,aAAcyJ,EAAKtN,MAAM6D,aACzBK,SAAUoJ,EAAKtN,MAAMkE,SACrBP,MAAM,EACNgR,SAAS,OAKjB,KAEN,OAAIvU,KAAKJ,MAAMuJ,MAAMI,UAEjBhI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC+H,EAAD,QAIGxJ,KAAKJ,MAAMuJ,MAAMM,QAExBlI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,UAAKzB,KAAKJ,MAAMuJ,MAAMM,WAM1BlI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwT,MAAI,EAACvT,UAAU,OAClBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,UAAU,YACjBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAWwT,IAAW,CAAE9G,OAAiC,MAAzBrO,KAAKI,MAAMqU,YAC3CjR,QAAS,WACP0J,EAAK/G,OAAO,OAHhB,cASF5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,UAAU,YACjBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAWwT,IAAW,CAAE9G,OAAiC,MAAzBrO,KAAKI,MAAMqU,YAC3CjR,QAAS,WACP0J,EAAK/G,OAAO,OAHhB,aASF5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,UAAU,YACjBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAWwT,IAAW,CAAE9G,OAAiC,MAAzBrO,KAAKI,MAAMqU,YAC3CjR,QAAS,WACP0J,EAAK/G,OAAO,OAHhB,cASF5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,UAAU,YACjBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAWwT,IAAW,CAAE9G,OAAiC,MAAzBrO,KAAKI,MAAMqU,YAC3CjR,QAAS,WACP0J,EAAK/G,OAAO,OAHhB,kBAUJ5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY+S,UAAWzU,KAAKI,MAAMqU,WAChClT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS0T,MAAM,KACb7T,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOgT,IAExBpT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS0T,MAAM,KACb7T,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOmT,IAExBvT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS0T,MAAM,KACb7T,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAO8E,IAExBlF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS0T,MAAM,KACb7T,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOqT,aArLDhR,qBChKtBqR,EAAkB,CAC7BvR,SAAU,GACVxB,UAAW,GACXC,SAAU,GACV8P,SAAU,GACV9C,OAAQ,GACR+F,WAAY,GACZ7F,MAAO,GACPvD,KAAK,EACL7I,UAAW,GACXb,IAAK,GACLK,KAAM,IAGK0S,EAAgB,CAC3BpR,MAAO,MACPC,OAAQ,CACN,CAAEM,GAAI,EAAGD,KAAM,OACf,CAAEC,GAAI,EAAGD,KAAM,YACf,CAAEC,GAAI,EAAGD,KAAM,eACf,CAAEC,GAAI,EAAGD,KAAM,YAEjBjC,IAAK,CACHuC,MAAO,MACPE,IAAK,EACLC,IAAK,GACLC,KAAM,EACNZ,MAAO,CAAEU,IAAK,GAAIC,IAAK,KAEzBzC,KAAM,CACJsC,MAAO,OACPE,IAAK,EACLC,IAAK,IACLC,KAAM,GACNZ,MAAO,CAAEU,IAAK,EAAGC,IAAK,MAExBxC,SAAU,CACRqC,MAAO,WACPE,IAAK,EACLC,IAAK,IACLC,KAAM,GACNZ,MAAO,CAAEU,IAAK,EAAGC,IAAK,MAExBQ,QAAS,CACPX,MAAO,UACPE,IAAK,EACLC,IAAK,GACLC,KAAM,EACNZ,MAAO,CAAEU,IAAK,EAAGC,IAAK,IAExBgH,IAAK,CAAEG,IAAK,UAAWC,KAAM,UAC7BzJ,KAAM,mCACN2M,OAAQ,MCRGhJ,EAAa,SAAAJ,GAAM,OAAI,SAAAoP,GAElC,OADAA,EAASC,GAAa,IACfnO,MAAM5H,EAAU,iBAAkB,CACvC0I,OAAQ,OACRC,KAAM3E,KAAK4E,UAAUlC,GACrBmC,QAAS,CACPC,eAAgB,sBAIjBjB,KACC,SAAAC,GACE,GAAIA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GAEE,MADc,IAAIgI,MAAMhI,EAAMU,WAIjCnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA4B,GACJqM,EAASE,GAASvM,MAEnBpB,MAAM,SAAAC,GAAK,OAAIwN,EAASG,GAAY3N,EAAMU,cA4BlC+M,EAAe,iBAAO,CACjC5Q,KC7F2B,kBDgGhB8Q,GAAc,SAAAC,GAAO,MAAK,CACrC/Q,KChG0B,eDiG1BgR,QAASD,IAGEF,GAAW,SAAAvM,GAAK,MAAK,CAChCtE,KCpGuB,YDqGvBgR,QAAS1M,IAgDE2M,GAAc,iBAAO,CAChCjR,KC3J0B,iBD8JfkR,GAAa,SAAAH,GAAO,MAAK,CACpC/Q,KC9JyB,cD+JzBgR,QAASD,IAGEI,GAAU,SAAAhK,GAAI,MAAK,CAC9BnH,KClKsB,WDmKtBgR,QAAS7J,IAuQEiK,GAAiB,SAAAjK,GAAI,OAAI,SAAAwJ,GAEpC,OADAA,EAASU,IAAiB,IACnB5O,MAAM5H,EAAU,eAAgB,CACrC0I,OAAQ,OACRC,KAAM3E,KAAK4E,UAAU,CACnBsM,UAAW5I,EAAK4I,UAChBG,QAAS/I,EAAK+I,QACdE,UAAWjJ,EAAKiJ,UAChB1R,KAAMyI,EAAKzI,OAEbgF,QAAS,CACPC,eAAgB,sBAGjBjB,KACC,SAAAC,GACE,GAAIA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GAEE,MADc,IAAIgI,MAAMhI,EAAMU,WAIjCnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA4O,GACJX,EAASY,GAAaD,MAEvBpO,MAAM,SAAAC,GAAK,OAAIwN,EAASa,GAAgBrO,EAAMU,cAGtCwN,GAAmB,iBAAO,CACrCrR,KC5c+B,sBD+cpBwR,GAAkB,SAAAT,GAAO,MAAK,CACzC/Q,KC/c8B,mBDgd9BgR,QAASD,IAGEQ,GAAe,SAAAE,GAAS,MAAK,CACxCzR,KCnd2B,gBDod3BgR,QAASS,IA4EEC,GAAgB,iBAAO,CAClC1R,KC3hB4B,mBD8hBjB2R,GAAe,SAAAZ,GAAO,MAAK,CACtC/Q,KC9hB2B,gBD+hB3BgR,QAASD,IAGEa,GAAY,SAAA3F,GAAM,MAAK,CAClCjM,KCliBwB,aDmiBxBgR,QAAS/E,IA8CEqB,GAAa,SAAAuE,GAAO,OAAI,SAAAlB,GAEnC,OADAA,EAASmB,IAAa,IACfrP,MAAM5H,EAAU,cAAe,CACpC0I,OAAQ,OACRC,KAAM3E,KAAK4E,UAAU,CACnBxE,SAAUJ,KAAKC,MAAMC,aAAaC,OAAOC,SACzC4S,QAASA,IAEXnO,QAAS,CACPC,eAAgB,sBAGjBjB,KACC,SAAAC,GACE,GAAIA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GAEE,MADc,IAAIgI,MAAMhI,EAAMU,WAIjCnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAwL,GAGFjT,OAAOkN,OAAO+F,GAAQ6D,OAAO,SAACpV,EAAGqV,GAAJ,OAAUrV,EAAIqV,GAAG,GAC9C9D,EAAM,OAAajT,OAAOkN,OAAO+F,GAAQ6D,OAAO,SAACpV,EAAGqV,GAAJ,OAAUrV,EAAIqV,GAAG,GACjErB,EAASsB,GAAS/D,MAGrBhL,MAAM,SAAAC,GAAK,OAAIwN,EAASuB,GAAY/O,EAAMU,cAGlCiO,GAAe,iBAAO,CACjC9R,KCznB2B,kBD4nBhBkS,GAAc,SAAAnB,GAAO,MAAK,CACrC/Q,KC5nB0B,eD6nB1BgR,QAASD,IAGEkB,GAAW,SAAAE,GAAK,MAAK,CAChCnS,KChoBuB,YDioBvBgR,QAASmB,cElmBLC,gMAI2B,OAAzBjX,KAAKJ,MAAMgS,KAAKxK,MAClBpH,KAAKJ,MAAMsX,UAAUlX,KAAKJ,MAAMgS,KAAKxK,KAAKtD,UAC1C9D,KAAKJ,MAAMoS,YAAYhS,KAAKJ,MAAMgS,KAAKxK,KAAKtD,WAK5C9D,KAAKJ,MAAM4G,WAAW+O,iFAOjB,IAAA1V,EAAAG,KACDmX,EAAe,SAAAjT,GAAA,IAAcF,EAAdE,EAAGkT,UAAyBC,EAA5BvX,OAAAwX,EAAA,EAAAxX,CAAAoE,EAAA,sBACnB3C,EAAAC,EAAAC,cAACmR,EAAA,EAAD9S,OAAA+G,OAAA,GACMwQ,EADN,CAEEE,OAAQ,SAAA3X,GAAK,OACXC,EAAKD,MAAMgS,KAAKC,gBACdtQ,EAAAC,EAAAC,cAACuC,EAAcpE,GAEf2B,EAAAC,EAAAC,cAAA,WACG6E,MAAM,uBACP/E,EAAAC,EAAAC,cAACmR,EAAA,EAAD,CACEC,GAAI,CACF2E,SAAU,QACVpX,MAAO,CACLwQ,KAAMhR,EAAMiI,mBAU5B,OACEtG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgW,EAAD,CACE7F,KAAM5R,KAAKJ,MAAMgS,KACjBQ,UAAWpS,KAAKJ,MAAMwS,UACtBI,WAAYxS,KAAKJ,MAAM4S,WACvBF,aAActS,KAAKJ,MAAM0S,aACzBjC,SACErQ,KAAKJ,MAAMkR,OAAOA,QAAS9Q,KAAKJ,MAAMkR,OAAOA,OAAOT,OAEtD0C,OACE/S,KAAKJ,MAAMmT,OAAOA,OAAS/S,KAAKJ,MAAMmT,OAAOA,OAAO1C,OAAS,KAE/D2B,YAAahS,KAAKJ,MAAMoS,YACxBG,WAAYnS,KAAKJ,MAAMuS,WAEvBb,UACEtR,KAAKJ,MAAMoM,KAAKA,KAAOhM,KAAKJ,MAAMoM,KAAKA,KAAKsF,UAAY,OAG5D/P,EAAAC,EAAAC,cAACiW,GAAA,gBAAD,KACEnW,EAAAC,EAAAC,cAACiW,GAAA,cAAD,CACE9V,IAAK5B,KAAKJ,MAAMiI,SAASjG,IACzB+V,WAAW,OACXC,QAAS,KAETrW,EAAAC,EAAAC,cAACmR,EAAA,EAAD,KACErR,EAAAC,EAAAC,cAACmR,EAAA,EAAD,CACEiF,OAAK,EACLC,KAAK,QACLV,UAAW,kBACT7V,EAAAC,EAAAC,cAACsW,EAAD,CACEjU,SACEjE,EAAKD,MAAMgS,KAAKC,gBACZhS,EAAKD,MAAMgS,KAAKxK,KAAKtD,SACrB,KAEN2C,SACE5G,EAAKD,MAAMgS,KAAKC,gBACZhS,EAAKD,MAAMoM,KAAKA,KAChB,KAEN7C,MAAOtJ,EAAKD,MAAMuJ,MAClB1F,aAAc5D,EAAKD,MAAM6D,aAEzB+C,WAAY3G,EAAKD,MAAM4G,WACvBD,YAAa1G,EAAKD,MAAM2G,YACxBH,OAAQvG,EAAKD,MAAMwG,YArB3B,OA0BE7E,EAAAC,EAAAC,cAAC0V,EAAD,CACEU,OAAK,EACLC,KAAK,QACLV,UAAW,kBACT7V,EAAAC,EAAAC,cAACuW,EAAD,CACE1G,UAC2B,OAAzBzR,EAAKD,MAAMoM,KAAKA,KACZnM,EAAKD,MAAMoM,KAAKA,KAAKsF,UACrB,KAENnI,MAAOtJ,EAAKD,MAAM0W,UAAUA,UAC5B7S,aAAc5D,EAAKD,MAAM6D,aACzByQ,YAAarU,EAAKD,MAAMsU,YACxB/B,WAAYtS,EAAKD,MAAMuS,WACvBY,OAAQlT,EAAKD,MAAMmT,OAAOA,YAKhCxR,EAAAC,EAAAC,cAAC0V,EAAD,CACEU,OAAK,EACLC,KAAK,QACLV,UAAW,kBACT7V,EAAAC,EAAAC,cAACwW,EAAD,CACEnU,SACEjE,EAAKD,MAAMgS,KAAKC,gBACZhS,EAAKD,MAAMgS,KAAKxK,KAAKtD,SACrB,KAENqM,KAAMtQ,EAAKD,MAAMkR,OAAOA,OACxBP,UAAW1Q,EAAKD,MAAM2Q,UACtBT,aAAcjQ,EAAKD,MAAMkQ,aACzBrM,aAAc5D,EAAKD,MAAM6D,kBAY/BlC,EAAAC,EAAAC,cAAC0V,EAAD,CACEU,OAAK,EACLC,KAAK,aACLV,UAAW,kBACT7V,EAAAC,EAAAC,cAACyW,EAAD,CACEjL,aAAcpN,EAAKD,MAAMqN,aACzBiK,UAAWrX,EAAKD,MAAMsX,UACtBlL,KAAMnM,EAAKD,MAAMoM,KAAKA,KAAOnM,EAAKD,MAAMoM,KAAKA,KAAO,UAI1DzK,EAAAC,EAAAC,cAACmR,EAAA,EAAD,CAAUC,GAAG,qBArJR7O,aA+JJmU,eACbC,kBAhMsB,SAAAhY,GACtB,MAAO,CACL2S,OAAQ3S,EAAM2S,OACdjC,OAAQ1Q,EAAM0Q,OACdqF,OAAQ/V,EAAM+V,OACdhN,MAAO/I,EAAM+I,MACb6C,KAAM5L,EAAM4L,KACZsK,UAAWlW,EAAMkW,UACjB1E,KAAMxR,EAAMwR,KACZxL,OAAQhG,EAAMgG,SAIS,SAAAoP,GAAQ,MAAK,CACtCvI,aAAc,SAAAoL,GAAQ,OAAI7C,EFuIA,SAAA6C,GAAQ,OAAI,SAAA7C,GACtC,OAAOlO,MAAM5H,EAAU,aAAc,CACnC0I,OAAQ,OACRC,KAAM3E,KAAK4E,UAAU+P,GACrB9P,QAAS,CACPC,eAAgB,sBAIjBjB,KACC,SAAAC,GAEE,GADAE,QAAQC,IAAI,UAAYjE,KAAK4E,UAAUd,IACnCA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GACE,MAAMA,IAGTT,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACJE,QAAQC,IAAI,WAAYH,GACxBlB,MAAM,iCAAmC5C,KAAK4E,UAAUd,IACxDgO,EAASQ,GAAQxO,IACjBI,OAAOC,SAASkD,KAAO,wBAExBhD,MAAM,SAAAC,GACLN,QAAQC,IAAI,WAAYK,EAAMU,SAC9BpC,MAAM,6CAA+C0B,EAAMU,YE1K5BuE,CAAaoL,KAChDnB,UAAW,SAAApT,GAAQ,OAAI0R,EF2EA,SAAA1R,GAAQ,OAAI,SAAC0R,EAAU8C,GAE9C,OADA9C,EAASM,IAAY,IAEnBxO,MAAM5H,EAAU,cAAgBoE,GAC7ByD,KACC,SAAAC,GACE,GAAIA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GAEE,MADc,IAAIgI,MAAMhI,EAAMU,WAIjCnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE1BF,KAAK,SAAAyE,GACJwJ,EAASS,GAAejK,IACxBwJ,EAASrD,GAAWrS,OAAOkN,OAAOhB,EAAKsF,aACvCkE,EAASQ,GAAQhK,IACjB,IAAI5F,EAASkS,IAAWlS,OACxBoP,EACEhP,EAAW1G,OAAAoG,EAAA,EAAApG,CAAA,GACNsG,EADK,CAERtC,SAAUkI,EAAKlI,SACf2C,SAAUuF,EAAKzI,KACf2I,IAAKF,EAAKE,IACVpJ,IAAKkJ,EAAKnJ,KACV2M,OAAQxD,EAAKwD,aAKlBzH,MAAM,SAAAC,GAAK,OAAIwN,EAASO,GAAW/N,EAAMU,aEnHdwO,CAAUpT,KAC1C0C,WAAY,SAAAJ,GAAM,OAAIoP,EAAShP,EAAWJ,KAC1CgM,UAAW,SAAAvO,GAAK,OAAI2R,EFgMG,SAAA3R,GAAK,OAAI,SAAA2R,GAIhC,OAHAA,EAtB0B,SAAA3R,GAC1B,MAAO,CACLgB,KCzNyB,gBD0NzBhB,SAmBO0U,CAAa1U,IACtB6D,QAAQC,IAAI,uBAAyBjE,KAAK4E,UAAUzE,IAE7CyD,MAAM5H,EAAU,cAAe,CACpC0I,OAAQ,OAERG,QAAS,CACPC,eAAgB,oBAElBH,KAAM3E,KAAK4E,UAAUzE,KAEpB0D,KACC,SAAAC,GAEE,GAAIA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GACE,MAAMA,IAGTT,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAEJ,GADAE,QAAQC,IAAI,aAAeH,IACvBA,EAASgR,QAYN,CACL,IAAIxQ,EAAQ,IAAIgI,MAAMxI,EAASyI,QAE/B,MADAjI,EAAMR,SAAWA,EACXQ,EAdNpE,aAAaqO,QAAQ,QAASzK,EAASiR,OACvC7U,aAAaqO,QAAQ,QAASvO,KAAK4E,UAAUzE,IAC7CD,aAAaqO,QAAQ,cAAc,GAOnCuD,EAxDoB,SAAAhO,GAC1B,MAAO,CACL3C,KC/NyB,gBDgOzB4T,MAAOjR,EAASiR,OAqDHC,CAAalR,IACtBI,OAAOC,SAASC,WAOnBC,MAAM,SAAAC,GACL1B,MAAM0B,EAAMU,SACZ8M,EA1DG,CACL3Q,KCrOyB,gBDsOzB6D,QAwDsBV,EAAMU,aEpPD0J,CAAUvO,KACvCyO,aAAc,SAAAzO,GAAK,OAAI2R,EF8PG,SAAA3R,GAAK,OAAI,SAAA2R,GACnC,OAAOlO,MAAM5H,EAAU,eAAgB,CACrC0I,OAAQ,OACRG,QAAS,CACPC,eAAgB,oBAElBH,KAAM3E,KAAK4E,UAAUzE,KAEpB0D,KACC,SAAAC,GAEE,GADAE,QAAQC,IAAI,mBAAqBjE,KAAK4E,UAAUd,IAC5CA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GAEE,MADAN,QAAQC,IAAI,cAAgBjE,KAAK4E,UAAUN,IACrCA,IAGTT,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAEJ,IAAIA,EAASgR,QAEN,CACL,IAAIxQ,EAAQ,IAAIgI,MAAM,SAAWxI,EAASyI,QAO1C,MAN0B,OAAtBzI,EAASmR,IAAIC,KACftS,MAAM,uCAENA,MAAMkB,EAASmR,IAAIjQ,SAErBV,EAAMR,SAAWA,EAASmR,IACpB3Q,EATN1B,MAAM,wDAYTyB,MAAM,SAAAC,GACLN,QAAQC,IAAIK,GACZwN,EAlDG,CACL3Q,KChS4B,mBDiS5B6D,QAgDyBV,EAAMU,aE1SD4J,CAAazO,KAC7CmO,YAAa,SAAAlO,GAAQ,OAAI0R,GF+dAqD,EE/dqB/U,EF+dX,SAAA0R,GAEnC,OADAA,EAASe,IAAc,IAChBjP,MAAM5H,EAAO,QAAA2H,OAAWwR,IAC5BtR,KACC,SAAAC,GACE,GAAIA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GAEE,MADc,IAAIgI,MAAMhI,EAAMU,WAIjCnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAuJ,GAGF,IAAIT,EAAS,EACbS,EAAM,SAAagI,QAAQ,SAAA3I,GACrBA,EAAI,SAAYE,GAAU,KAEhCS,EAAM,OAAaT,EACnBmF,EAASiB,GAAU3F,MAGtB/I,MAAM,SAAAC,GAAK,OAAIwN,EAASgB,GAAaxO,EAAMU,eAhCrB,IAAAmQ,GE9dzBrG,WAAY,kBAAMgD,EFyTY,SAAAA,GAC9B,OAAOlO,MACL5H,EAAO,yBAAA2H,OAA4B3D,KAAKC,MAAMC,aAAaC,OAAOC,WAEjEyD,KACC,SAAAC,GACE,GAAIA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GAEE,MADc,IAAIgI,MAAMhI,EAAMU,WAIjCnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAyE,GACJwJ,EAnCG,CACL3Q,KC1V0B,mBD6XxBjB,aAAamV,QAEbvD,EAhCG,CACL3Q,KC/V0B,mBD+XxB+C,OAAOC,SAASC,WAEjBC,MAAM,SAAAC,GAAK,OAAIN,QAAQC,IAAIK,QErV9BiO,eAAgB,SAAAnS,GAAQ,OAAI0R,EAASS,GAAenS,KACpDL,aAAc,SAAA0F,GAAK,OAAIqM,EFyVG,SAAArM,GAAK,OAAI,SAAAqM,GACnC,GAAK5R,aAAaC,MAIhB,OAAOyD,MAAM5H,EAAU,iBAAkB,CACvC0I,OAAQ,OACRC,KAAM3E,KAAK4E,UAAU,CAAElB,KAAM+B,EAAM,GAAIrE,KAAMqE,EAAM,KACnDZ,QAAS,CACPC,eAAgB,sBAKjBjB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACqB,kBAArBA,EAASkB,QACXpC,MAAK,sBAAAe,OAAuB8B,EAAM,GAA7B,OAEL7C,MAAK,sBAAAe,OAAuB8B,EAAM,GAA7B,mCACLvB,OAAOC,SAASC,YAGnBC,MAAM,SAAAC,GAELN,QAAQC,IAAIK,KAvBhB1B,MAAM,6BE3VwB7C,CAAa0F,KAC7CoH,UAAW,SAACsI,EAAQhP,GAAT,OAAkB2L,EFsbN,SAACqD,EAAQhP,GAAT,OAAkB,SAAA2L,GACzC,OAAOlO,MAAM5H,EAAO,QAAA2H,OAAWwR,GAAU,CACvCzQ,OAAQ,MACRC,KAAM3E,KAAK4E,UAAU,CACnBuB,KAAMA,IAERtB,QAAS,CACPC,eAAgB,sBAIjBjB,KACC,SAAAC,GACE,GAAIA,EAASuI,GACX,OAAOvI,EAEP,IAAIQ,EAAQ,IAAIgI,MACd,SAAWxI,EAASyI,OAAS,KAAOzI,EAAS0I,YAG/C,MADAlI,EAAMR,SAAWA,EACXQ,GAGV,SAAAA,GAEE,MADc,IAAIgI,MAAMhI,EAAMU,WAIjCnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAuJ,GACJpJ,QAAQC,IAAI,sBAAwBjE,KAAK4E,UAAUwI,IACnD0E,EAASiB,GAAU3F,MAEpB/I,MAAM,SAAAC,GAAK,OAAIwN,EAASgB,GAAaxO,EAAMU,aEvdR6H,CAAUsI,EAAQhP,KACxDsI,WAAY,SAAAuE,GAAO,OAAIlB,EAASrD,GAAWuE,KAC3CxC,YAAa,SAAA9M,GAAI,OAAIoO,EFoXI,SAAApO,GAEzB,OAAOE,MAAM5H,EAAO,0BAAA2H,OAA6BD,EAAK,GAAlC,aAAAC,OAAgDD,EAAK,KACtEG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACJE,QAAQC,IAAI,WAAYP,GACxBQ,OAAOC,SAASC,WAEjBC,MAAM,SAAAC,GAAK,OAAIN,QAAQC,IAAIK,KE5XAkM,CAAY9M,KAC1Cb,YAAa,SAAAH,GAAM,OAAIoP,EFnBE,SAAApP,GAAM,OAAI,SAACoP,EAAU8C,GAC9ClS,EAAOoJ,OAAS8I,IAAWtM,KAAKA,KAAKwD,OACrCpJ,EAAO8F,IAAMoM,IAAWtM,KAAKA,KAAKE,IAClC9F,EAAOtC,SAAWwU,IAAWtM,KAAKA,KAAKlI,SACvCsC,EAAOK,SAAW6R,IAAWtM,KAAKA,KAAKzI,KACvC6C,EAAOvD,KAAOyV,IAAWtM,KAAKA,KAAKnJ,KACnC2S,EAASwD,UAAQC,OAAO,SAAU7S,KEaFG,CAAYH,OAsK5CgS,CAGEnB,uBC7NSiC,GAAO,WAIF,IAJG9Y,EAIH+Y,UAAAjY,OAAA,QAAAkI,IAAA+P,UAAA,GAAAA,UAAA,GAJW,CACrB5P,WAAW,EACXE,QAAS,KACTuC,KAAM,MACPoN,EAAWD,UAAAjY,OAAA,EAAAiY,UAAA,QAAA/P,EACd,OAAOgQ,EAAOvU,MACV,IFEgB,WEDZ,OAAO/E,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAOE,QAAS,KAAMuC,KAAMoN,EAAOvD,UAEpE,IFHoB,eEIhB,OAAO/V,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAME,QAAS,KAAMuC,KAAM,OAE5D,IFLmB,cEMf,OAAOlM,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAOE,QAAS2P,EAAOvD,QAAS7J,KAAM,OAEvE,QACI,OAAO5L,IChBNiZ,GAAS,WAEuC,IAFtCjZ,EAEsC+Y,UAAAjY,OAAA,QAAAkI,IAAA+P,UAAA,GAAAA,UAAA,GAF7B,CAAE5P,WAAW,EACTE,QAAS,KACTqH,OAAO,MAAOsI,EAAWD,UAAAjY,OAAA,EAAAiY,UAAA,QAAA/P,EACzD,OAAQgQ,EAAOvU,MACX,IHmBkB,aGlBlB,OAAO/E,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAOE,QAAS,KAAMqH,OAAQsI,EAAOvD,UAElE,IHcsB,iBGblB,OAAO/V,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAME,QAAS,KAAMqH,OAAQ,OAE9D,IHYqB,gBGXjB,OAAOhR,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAOE,QAAS2P,EAAOvD,UAExD,QACE,OAAOzV,ICdJkZ,GAAS,WAGjB,IAFHlZ,EAEG+Y,UAAAjY,OAAA,QAAAkI,IAAA+P,UAAA,GAAAA,UAAA,GAFK,CAAE5P,WAAW,EAAME,QAAS,KAAMsJ,OAAQ,MAClDqG,EACGD,UAAAjY,OAAA,EAAAiY,UAAA,QAAA/P,EACH,OAAQgQ,EAAOvU,MACb,IJsBqB,YIrBnB,OAAO/E,OAAAoG,EAAA,EAAApG,CAAA,GACFM,EADL,CAEEmJ,WAAW,EACXE,QAAS,KACTsJ,OAAQqG,EAAOvD,UAGnB,IJYyB,gBIXvB,OAAO/V,OAAAoG,EAAA,EAAApG,CAAA,GAAKM,EAAZ,CAAmBmJ,WAAW,EAAME,QAAS,KAAMsJ,OAAQ,OAE7D,IJUwB,eITtB,OAAOjT,OAAAoG,EAAA,EAAApG,CAAA,GAAKM,EAAZ,CAAmBmJ,WAAW,EAAOE,QAAS2P,EAAOvD,UAEvD,QACE,OAAOzV,ICpBAT,GAAU,WAIL,IAJMS,EAIN+Y,UAAAjY,OAAA,QAAAkI,IAAA+P,UAAA,GAAAA,UAAA,GAJc,CACxB5P,WAAW,EACXE,QAAS,KACT3I,QAAS,MACVsY,EAAWD,UAAAjY,OAAA,EAAAiY,UAAA,QAAA/P,EACd,OAAOgQ,EAAOvU,MACV,ILyBmB,cKxBf,OAAO/E,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAOE,QAAS,KAAM3I,QAASsY,EAAOvD,UAEvE,ILoBuB,kBKnBnB,OAAO/V,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAME,QAAS,KAAM3I,QAAS,OAE/D,ILkBsB,iBKjBlB,OAAOhB,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAOE,QAAS2P,EAAOvD,QAAS/U,QAAS,OAE1E,QACI,OAAOV,IChBNmZ,GAAY,WAOpB,IANHnZ,EAMG+Y,UAAAjY,OAAA,QAAAkI,IAAA+P,UAAA,GAAAA,UAAA,GANK,CACN5P,WAAW,EACXE,QAAS,KACT6M,UAAW,IAEb8C,EACGD,UAAAjY,OAAA,EAAAiY,UAAA,QAAA/P,EACH,OAAQgQ,EAAOvU,MACb,INMyB,gBMLvB,OAAO/E,OAAAoG,EAAA,EAAApG,CAAA,GACFM,EADL,CAEEmJ,WAAW,EACXE,QAAS,KACT6M,UAAW8C,EAAOvD,UAGtB,INJ6B,oBMK3B,OAAO/V,OAAAoG,EAAA,EAAApG,CAAA,GAAKM,EAAZ,CAAmBmJ,WAAW,EAAME,QAAS,KAAM6M,UAAW,KAEhE,INN4B,mBMO1B,OAAOxW,OAAAoG,EAAA,EAAApG,CAAA,GACFM,EADL,CAEEmJ,WAAW,EACXE,QAAS2P,EAAOvD,QAChBS,UAAW,KAGf,QACE,OAAOlW,IC7BAoZ,GAAS,WAIJ,IAJKpZ,EAIL+Y,UAAAjY,OAAA,QAAAkI,IAAA+P,UAAA,GAAAA,UAAA,GAJa,CACvB5P,WAAW,EACXE,QAAS,KACT0M,OAAQ,IACTiD,EAAWD,UAAAjY,OAAA,EAAAiY,UAAA,QAAA/P,EACd,OAAOgQ,EAAOvU,MACV,IPakB,aOZd,OAAO/E,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAOE,QAAS,KAAM0M,OAAQiD,EAAOvD,UAEtE,IPQsB,iBOPlB,OAAO/V,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAME,QAAS,KAAM0M,OAAQ,KAE9D,IPMqB,gBOLjB,OAAOrW,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAOE,QAAS2P,EAAOvD,QAASM,OAAQ,KAEzE,QACI,OAAO/V,ICbNqZ,GAAO,WAMF,IANGrZ,EAMH+Y,UAAAjY,OAAA,QAAAkI,IAAA+P,UAAA,GAAAA,UAAA,GANW,CACrB5P,WAAW,EACXsI,kBAAiBjO,aAAa8V,QAAQ,SACtCjB,MAAO7U,aAAa8V,QAAQ,SAC5BtS,KAAMxD,aAAa8V,QAAQ,SAAWhW,KAAKC,MAAMC,aAAa8V,QAAQ,UAAY,KAClFjQ,QAAS,MACV2P,EAAWD,UAAAjY,OAAA,EAAAiY,UAAA,QAAA/P,EACd,OAAQgQ,EAAOvU,MACX,IRZqB,gBQajB,OAAO/E,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CACImJ,WAAW,EACXsI,iBAAiB,EACjBzK,KAAMgS,EAAOvV,QAErB,IRjBqB,gBQkBjB,OAAO/D,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CACImJ,WAAW,EACXsI,iBAAiB,EACjBpI,QAAS,GACTgP,MAAOW,EAAOX,QAEtB,IRvBqB,gBQwBjB,OAAO3Y,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CACImJ,WAAW,EACXsI,iBAAiB,EACjBpI,QAAS2P,EAAO1Q,UAExB,IR5BsB,iBQ6BlB,OAAO5I,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CACImJ,WAAW,EACXsI,iBAAiB,IAEzB,IRhCsB,iBQiClB,OAAO/R,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CACImJ,WAAW,EACXsI,iBAAiB,EACjB4G,MAAO,GACPrR,KAAM,OAEd,QACI,OAAOhH,8CC3CN6I,GAAQ,WAIH,IAJI7I,EAIJ+Y,UAAAjY,OAAA,QAAAkI,IAAA+P,UAAA,GAAAA,UAAA,GAJY,CACtB5P,WAAW,EACXE,QAAS,KACTN,MAAO,IACRiQ,EAAWD,UAAAjY,OAAA,EAAAiY,UAAA,QAAA/P,EACd,OAAOgQ,EAAOvU,MACV,ITKiB,YSJb,OAAO/E,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAOE,QAAS,KAAMN,MAAOiQ,EAAOvD,UAErE,ITAqB,gBSCjB,OAAO/V,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAME,QAAS,KAAMN,MAAO,KAE7D,ITFoB,eSGhB,OAAOrJ,OAAAoG,EAAA,EAAApG,CAAA,GAAIM,EAAX,CAAkBmJ,WAAW,EAAOE,QAAS2P,EAAOvD,QAAS1M,MAAO,KAExE,QACI,OAAO/I,ICXnBiL,EAAQ,KAAUC,SAElB,IAAMqO,GCMUC,uBACZC,2BAAgB/Z,OAAAoG,EAAA,EAAApG,CAAA,CACdgB,QAASnB,GACTmR,OAAQuI,GACRtG,OAAQuG,GACRnQ,MAAOF,GACPkN,OAAQqD,GACRxN,KAAMkN,GACNtH,KAAM6H,GACNnD,UAAWiD,IACRO,sBAAY,CACbzB,SAAUhD,EACVjP,OAAQmP,MAGZwE,2BAAgBC,KAAOC,ODLZC,oLAZX,OACE3Y,EAAAC,EAAAC,cAAC0Y,EAAA,SAAD,CAAUR,MAAOA,IACfpY,EAAAC,EAAAC,cAACmR,EAAA,EAAD,KACErR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2Y,GAAD,gBANMpW,aEDZqW,GAAcC,QACW,cAA7B1S,OAAOC,SAAS0S,UAEe,UAA7B3S,OAAOC,SAAS0S,UAEhB3S,OAAOC,SAAS0S,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBjO,UAAUkO,cACPC,SAASF,GACTnT,KAAK,SAAAsT,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3a,QACfqM,UAAUkO,cAAcO,WAK1BxT,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBI,MAAM,SAAAC,GACLN,QAAQM,MAAM,4CAA6CA,KCtEjEmT,IAAS5D,OAAOhW,EAAAC,EAAAC,cAAC2Z,GAAD,MAASpH,SAASC,eAAe,SDWlC,WACb,GAA6C,kBAAmBxH,UAAW,CAGzE,GADkB,IAAI4O,IAAI9N,iBAAwB3F,OAAOC,UAC3CyT,SAAW1T,OAAOC,SAASyT,OAIvC,OAGF1T,OAAO2T,iBAAiB,OAAQ,WAC9B,IAAMb,EAAK,GAAArT,OAAMkG,iBAAN,sBAEP8M,IAiDV,SAAiCK,GAE/BpT,MAAMoT,GACHnT,KAAK,SAAAC,GAGkB,MAApBA,EAASyI,SACuD,IAAhEzI,EAASe,QAAQiT,IAAI,gBAAgBtQ,QAAQ,cAG7CuB,UAAUkO,cAAcc,MAAMlU,KAAK,SAAAsT,GACjCA,EAAaa,aAAanU,KAAK,WAC7BK,OAAOC,SAASC,aAKpB2S,GAAgBC,KAGnB3S,MAAM,WACLL,QAAQC,IACN,mEArEAgU,CAAwBjB,GAIxBjO,UAAUkO,cAAcc,MAAMlU,KAAK,WACjCG,QAAQC,IACN,+GAMJ8S,GAAgBC,MCtCxBkB","file":"static/js/main.bd5548b6.chunk.js","sourcesContent":["export const baseUrl = \"https://match-server.herokuapp.com/\";\n//export const baseUrl = \"http://localhost:3000/\";\n","import React, { Component } from \"react\";\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  ModalBody,\n  Row\n} from \"reactstrap\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ items: this.props.profile.gallery });\n\n    /* if(localStorage.length !== 0)\n      fetch(baseUrl + \"users/add/profile\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          user:JSON.parse(localStorage.creds).username,\n          data:this.props.profile.username}),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(result => result.json())\n      .then(result => {console.log(result.message)}); */\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === this.state.items.length - 1\n        ? 0\n        : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === 0\n        ? this.state.items.length - 1\n        : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n\n    const slides = this.state.items.map(item => {\n      return (\n        <CarouselItem\n          className=\"custom-tag text-center\"\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item}\n        >\n          <img\n            src={baseUrl + item}\n            alt={item}\n            style={{ width: \"auto\", height: \"300px\" }}\n          />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <div>\n        <style>\n          {`.custom-tag {                                \n            background: linear-gradient(262deg, #ff7854, #fd267d);\n          }`}\n        </style>\n        <Carousel\n          activeIndex={activeIndex}\n          next={this.next}\n          previous={this.previous}\n        >\n          {slides}\n          <CarouselControl\n            direction=\"prev\"\n            directionText=\"Previous\"\n            onClickHandler={this.previous}\n          />\n          <CarouselControl\n            direction=\"next\"\n            directionText=\"Next\"\n            onClickHandler={this.next}\n          />\n        </Carousel>\n        <ModalBody>\n          {this.props.profile ? (\n            <div>\n              <header style={{ textAlign: \"center\" }}>\n                <h3>\n                  {this.props.profile.firstname} {this.props.profile.lastname},{\" \"}\n                  {this.props.profile.age}\n                </h3>\n                <h6>\n                  {this.props.profile.fame}% / {this.props.profile.distance}{\" \"}\n                  miles\n                </h6>\n              </header>\n              <h6 style={{ display: \"flex\" }}>\n                {Object.keys(this.props.profile.tags).map((tag, index) => {\n                  if (this.props.profile.tags[tag]) {\n                    return (\n                      <p\n                        style={{\n                          fontStyle: \"italic\",\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"center\",\n                          width: \"100%\",\n                          padding: \"0\",\n                          listStyle: \"none\"\n                        }}\n                        key={index}\n                      >\n                        {tag}\n                      </p>\n                    );\n                  } else {\n                    return \"\";\n                  }\n                })}\n              </h6>\n              <p style={{ textAlign: \"center\" }}>\n                {this.props.profile.biography}\n                <br />\n                <small>last login : {this.props.profile.last_login}</small>\n              </p>\n\n              <Row className=\"row justify-content-center\">\n                {this.props.like === true ? (\n                  <span\n                    onClick={() => {\n                      /* console.log(\n                      \"props.profile.username\" + this.props.profile.username\n                    ); */\n                      this.props.postFavorite([\n                        JSON.parse(localStorage.creds).username,\n                        this.props.profile.username\n                      ]);\n                    }}\n                    className=\"col-auto fa fa-heart fa-lg mouseover\"\n                    style={{ color: \"#E91E63\" }}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </Row>\n            </div>\n          ) : (\n            \"egweg\"\n          )}\n        </ModalBody>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","// Selection.js\n\nimport React from \"react\";\nimport \"./Selection.css\";\n\nconst Selection = ({genre, genres, onGenreChange }) => (\n  <div className=\"selection\" style={{alignItems:\"center\"}}>\n    <label>Sort By</label>\n    <select value={genre} onChange={onGenreChange}>\n      \n      { genres.map( genre => (\n        <option value={genre.name} key={genre.id}>{genre.name}</option>\n      ))}\n    </select>\n  </div>\n);\n\nexport default Selection;","// Slider.js\n\nimport React from \"react\";\nimport InputRange from \"react-input-range\";\n\nimport 'react-input-range/lib/css/index.css';\nimport \"./Slider.css\"\n\nclass Slider extends React.Component {\n  onChange = range => {\n    this.props.onChange({\n      type: this.props.data.label,\n      value: range\n    });\n  }\n  render() {    \n    //console.log(\"slider data\" + JSON.stringify(this.props.data));    \n      const { min, max, step, value, label } = this.props.data;\n      return (\n        <div className=\"slider\">\n          <label>{label}</label>\n          <InputRange\n            minValue={min}\n            maxValue={max}\n            step={step}\n            onChange={this.onChange}\n            value={value}\n          />\n        </div>\n    )    \n  }\n} \n\nexport default Slider;","// Navigation.js\n\nimport React from \"react\";\nimport \"./Navigation.css\";\nimport Selection from \"./Selection\";\nimport Slider from './Slider.js';\n\nclass Navigation extends React.Component {\n  /* componentDidMount() {\n    fetch(this.props.url)\n      .then(response => response.json())\n      .then(data => {\n        this.props.setGenres(data.genres);\n        console.log(\"data.genres\" + data.genres);\n\n      })\n      .catch(error => console.log(error));\n  } */\n\n  render() {\n    const { comtags, genre, genres, onGenreChange, onChange, age, fame, distance } = this.props;\n    return (\n      <section className=\"navigation\">        \n        <Slider data={age} onChange={onChange} />\n        <Slider data={fame} onChange={onChange} />\n        <Slider data={distance} onChange={onChange} /> \n        <Slider data={comtags} onChange={onChange} /> \n        <Selection\n          genre={genre}\n          genres={genres}\n          onGenreChange={onGenreChange}\n        />\n      </section>\n    )\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport { Button, Dropdown, DropdownToggle, DropdownMenu } from \"reactstrap\";\nimport Navigation from \"./navigation/Navigation\";\nimport \"./chat.css\";\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.toggle = this.toggle.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ ...this.props.filter, dropdownOpen: false });\n  }\n\n  onGenreChange = event => {\n    this.setState({ genre: event.target.value });\n  };\n\n  setGenres = genres => {\n    this.setState({ genres });\n  };\n\n  onChange = data => {\n    this.setState({\n      [data.type]: {\n        ...this.state[data.type],\n        value: data.value\n      }\n    });\n  };\n\n  handleSubmit() {\n    if (localStorage.length === 0) {\n      alert(\"Login First\");\n    } else {\n      this.props.fetchFilter(this.state);\n      this.props.fetchUsers({\n        ...this.state,\n        username: JSON.parse(localStorage.creds).username,\n        likelist: this.props.likelist.like\n      });\n    }\n  }\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\" style={{ margin: \"10px\" }}>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n              <DropdownToggle color=\"warning\">Filter / Sort</DropdownToggle>\n              <DropdownMenu className=\"text-center\">\n                <section className=\"slider\" style={{ display: \"flex\" }}>\n                  <Navigation\n                    onChange={this.onChange}\n                    onGenreChange={this.onGenreChange}\n                    {...this.state}\n                  />\n                </section>\n                <Button\n                  color=\"warning\"\n                  style={{ marginTop: \"0px\" }}\n                  onClick={e => {\n                    this.handleSubmit();\n                  }}\n                >\n                  Confirm\n                </Button>\n              </DropdownMenu>\n            </Dropdown>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React from \"react\";\n\nexport const Loading = () => {\n  return (\n    <div className=\"col-12\">\n      <span className=\"fa fa-spinner fa-pulse fa-5x fa-fw\"></span>\n      <p>Loading . . .</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport Profile from \"./Profile\";\nimport Filter from \"./Filter\";\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardText,\n  Modal,\n  ModalHeader\n} from \"reactstrap\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nclass RenderUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.postBlacklist = this.postBlacklist.bind(this);\n    this.checkProfile = this.checkProfile.bind(this);\n  }\n  postBlacklist = user => {\n    if (!localStorage.creds) {\n      alert(\"You need to log on first\");\n    } else {\n      alert(`User ${user} is reported as fake account.`);\n      return fetch(baseUrl + `users/add/blacklist?user=${user}`)\n        .then(response => response.json())\n        .then(response => {\n          console.log(\"Blaklist Added\", response);\n          window.location.reload();\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  checkProfile() {\n    if (localStorage.length !== 0)\n      fetch(baseUrl + \"users/add/profile\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          user: JSON.parse(localStorage.creds).username,\n          data: this.props.user.username\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(result => result.json())\n        .then(result => {\n          console.log(result.message);\n        });\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  reportUser() {}\n\n  render() {\n    return (\n      <div>\n        <Card style={{ maxWidth: \"250px\" }}>\n          <CardImg\n            className=\"mouseover img-responsive\"\n            style={{ objectFit: \"cover\" }}\n            height=\"300px\"\n            overflow=\"hidden\"\n            src={baseUrl + this.props.user.profile}\n            alt={this.props.user.username}\n            onClick={e => {\n              e.preventDefault();\n              this.checkProfile();\n              this.toggleModal();\n            }}\n          />\n          <CardBody>\n            <CardText className=\"row justify-content-center\">\n              <span className=\"col-auto\">\n                {this.props.user.username}% / {this.props.user.age}y\n              </span>\n              <span\n                onClick={e => {\n                  e.preventDefault();\n                  this.props.postFavorite([\n                    this.props.username,\n                    this.props.user.username\n                  ]);\n                }}\n                className=\"col-auto fa fa-heart fa-lg mouseover\"\n                style={{ color: \"#E91E63\" }}\n              />\n              {/* <span className=\"col-auto fa fa-close fa-lg mouseover\" /> */}\n              {this.props.user.last_login === null ? (\n                <span\n                  className=\"col-auto fa fa-exclamation-circle fa-lg mouseover\"\n                  onClick={() => {\n                    //e.preventDefault();\n                    window.confirm(\n                      \"Are you sure you report this user as fake user?\"\n                    ) && this.postBlacklist(this.props.user.username);\n                    /* if (\n                      window.confirm(\n                        \"Are you sure you report this user as fake user?\"\n                      )\n                    ) {\n                      this.postBlacklist(this.props.user.username);\n                    } */\n                  }}\n                />\n              ) : (\n                \"\"\n              )}\n            </CardText>\n          </CardBody>\n        </Card>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Profile</ModalHeader>\n          <Profile\n            profile={this.props.user}\n            postFavorite={this.props.postFavorite}\n            like={true}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n\n/* function RenderUser({ user, postFavorite, username }) {\n  return (\n    <div>\n      <Card>\n        <CardImg\n          width=\"100%\"\n          src={baseUrl + user.profile}\n          alt={user.username}\n        />\n        <CardBody>\n          <CardText className=\"row justify-content-center\">\n            <div className=\"col-auto\">{user.username}</div>\n            <span\n              className=\"col-auto fa fa-address-card fa-lg\"\n              style={{ color: \"#6A1B9A\" }}\n            />\n            <span\n              onClick={e => {\n                e.preventDefault();\n                postFavorite([username, user.username]);\n              }}\n              className=\"col-auto fa fa-heart fa-lg\"\n              style={{ color: \"#E91E63\" }}\n            />\n            <span className=\"col-auto fa fa-close fa-lg dislike\" />\n          </CardText>\n        </CardBody>\n      </Card>\n    </div>\n  );\n} */\n\nconst Users = props => {\n  //console.log(\"props.users[0] === null\" + props.users.length);\n  const userlist =\n    props.users.users.length === 0 ? (\n      <h1>Result has not found</h1>\n    ) : (\n      props.users.users.map(user => {\n        if (user !== undefined && user !== null) {\n          return (\n            /* <div key={user._id} className=\"col-12 col-md-3 m-1\">\n        <div key={user._id} className=\"col-9 mx-auto col-md-6 col-lg-3 my-1\">*/\n            <div\n              key={user._id}\n              className=\"col-auto mx-auto col-md-6 col-lg-4 my-1\"\n            >\n              <RenderUser\n                user={user}\n                postFavorite={props.postFavorite}\n                postBlacklist={props.postBlacklist}\n                username={props.username}\n              />\n            </div>\n          );\n        } else {\n          return \"\";\n        }\n      })\n    );\n\n  if (props.users.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  } else if (props.users.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h4>{props.users.errMess}</h4>\n        </div>\n      </div>\n    );\n  } else\n    return (\n      <div className=\"container\">\n        <Filter\n          filter={props.filter}\n          fetchUsers={props.fetchUsers}\n          likelist={props.likelist}\n          fetchFilter={props.fetchFilter}\n        />\n        <div className=\"row\">{userlist}</div>\n      </div>\n    );\n};\n\nexport default Users;\n","import React from 'react';\n\nclass ImageCard extends React.Component {\n  render() {\n    return (\n      <div className=\"column is-3\">\n        <div className=\"card\" >\n          <div className=\"card-image\">\n            <figure className=\"image is-4by3\">\n              <img alt={this.props.alt} src={this.props.src} />\n            </figure>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"media\">\n              <div className=\"media-content\">\n                <p className=\"title is-4\">{new Date(this.props.date).toLocaleDateString(\"en-GB\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;","import React from \"react\";\nimport ImageCard from \"./ImageCard\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nclass Uploader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profile: null,\n      gallery: [],\n      images: null\n    };\n\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChangeProfile = this.onChangeProfile.bind(this);\n    this.onChangeGallery = this.onChangeGallery.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ images: this.props.gallery });\n    console.log(JSON.stringify(this.props));\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    this.fileUpload();\n  }\n\n  onChangeProfile(e) {\n    this.setState({ profile: e.target.files[0] });\n    console.log(e.target.files[0]);\n    e.preventDefault();\n  }\n  onChangeGallery(e) {\n    this.setState({ gallery: e.target.files });\n    console.log(this.state);\n    e.preventDefault();\n  }\n\n  fileUpload() {\n    let data = new FormData();\n    for (var x = 0; x < this.state.gallery.length; x++) {\n      data.append(\"gallery\", this.state.gallery[x]);\n    }\n    //data.append('gallery', this.state.gallery);\n    data.append(\"profile\", this.state.profile);\n    data.append(\"username\", this.props.username);\n    console.log(this.state);\n    const url = baseUrl + \"image\";\n\n    fetch(url, {\n      mode: \"no-cors\",\n      method: \"POST\",\n      body: data\n    })\n      .then(res => console.log(JSON.stringify(res)))\n      .then(() => (window.location.href = \"localhost:3001/home\"));\n  }\n\n  render() {\n    let images;\n    if (\n      this.state.images !== [] &&\n      this.state.images &&\n      this.state.images.length > 0\n    ) {\n      images = this.state.images.map(i => {\n        return (\n          <ImageCard\n            key={this.state.images.indexOf(i)}\n            alt={i}\n            src={baseUrl + i}\n            date={i.replace(\"images/edgar2\", \"\").replace(\".png\", \"\")}\n          />\n        );\n      });\n    } else {\n      images = <h2 className=\"subtitle\">No images :(</h2>;\n    }\n\n    return (\n      <section className=\"section\">\n        <div className=\"container  is-fluid\">\n          <h1 className=\"title\">Photo Gallery</h1>\n          <div className=\"file is-info has-name is-fullwidth\">\n            <label className=\"file-label\">\n              <input\n                className=\"file-input\"\n                type=\"file\"\n                name=\"profile\"\n                onChange={this.onChangeProfile}\n              />\n              Profile\n              <input\n                className=\"file-input\"\n                type=\"file\"\n                name=\"gallery\"\n                multiple\n                onChange={this.onChangeGallery}\n              />\n              Gallery\n              <span></span>\n            </label>\n          </div>\n          <br />\n          {/* <div className=\"file is-info has-name is-fullwidth\">\n            <label className=\"file-label\">\n              <input className=\"file-input\" type=\"file\" name=\"gallery\" multiple onChange={this.onChangeGallery} />\n              <span className=\"file-cta\">\n                <span className=\"file-icon\">\n                  <i className=\"fas fa-upload\"></i>\n                </span>\n                <span className=\"file-label\">\n                  Choose Gallerly\n                </span>\n              </span>\n              <span className=\"file-name\">\n                {this.state.gallery}\n              </span>\n            </label>\n          </div>\n          <br/> */}\n          <button\n            className=\"button is-primary\"\n            onClick={this.onFormSubmit}\n            type=\"submit\"\n          >\n            Upload\n          </button>\n        </div>\n        <hr />\n        <div className=\"container is-fluid\">\n          <div className=\"columns is-multiline\">{images}</div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Uploader;\n","import React, { Component } from \"react\";\nimport { Button, Label, Col, Row } from \"reactstrap\";\nimport { Control, Form, Errors } from \"react-redux-form\";\nimport Upload from \"./Upload\";\nimport { compose, withProps } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nrequire(\"dotenv\").config();\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || val.length <= len;\nconst minLength = len => val => val && val.length >= len;\n//const isNumber = val => !isNaN(Number(val));\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //username: this.props.username,\n      //tags: {},\n      hideGPS: false\n    };\n    this.tagClick = this.tagClick.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      ...this.props.info\n    });\n  }\n\n  hideGps() {\n    fetch(\"https://api.ipify.org?format=json\")\n      .then(response => response.json())\n      .then(result => {\n        //console.log(result.ip);\n        fetch(`https://ipinfo.io/${result.ip}/json?token=1f700d00426ba7`)\n          .then(result => result.json())\n          .then(result => {\n            let gps = result.loc.split(\",\");\n            this.setState({ gps: { lat: gps[0], lng: gps[1] }, hideGps: true });\n            //console.log(\"gps from hideGps = \" + gps);\n          })\n          .catch(error => console.log(error));\n      });\n  }\n\n  tagClick(tag) {\n    this.setState({\n      tags: { ...this.state.tags, [tag]: !this.state.tags[tag] }\n    });\n  }\n  getCurrentLocation(e) {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          gps: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          hideGps: false\n        });\n      });\n    } else {\n      fetch(\"https://jsonip.com\").then(result => {\n        fetch(`https://ipinfo.io/${result.ip}/json?token=1f700d00426ba7`).then(\n          result => console.log(result)\n        );\n      });\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n    e.preventDefault();\n  }\n\n  handleSubmit(values) {\n    console.log(values);\n    this.props.postFeedback({\n      ...values,\n      tags: this.state.tags,\n      username: this.props.info.username,\n      gps: this.state.gps\n    });\n  }\n\n  render() {\n    const Map = compose(\n      withProps({\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.MAP_API}&v=3.exp&libraries=geometry,drawing,places`,\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />\n      }),\n      withScriptjs,\n      withGoogleMap\n    )(() => (\n      <GoogleMap\n        defaultZoom={14}\n        defaultCenter={this.state.gps}\n        onClick={t => {\n          console.log(\"t.latlng\" + JSON.stringify(t.latLng));\n          this.setState({\n            gps: t.latLng\n          });\n        }}\n      >\n        <Marker position={this.state.gps} />\n      </GoogleMap>\n    ));\n\n    const renderTags = this.state.tags\n      ? Object.keys(this.state.tags).map(tag => {\n          return (\n            <Button\n              style={{ margin: \"5px\" }}\n              key={tag}\n              className=\"col-sm-2\"\n              outline\n              color=\"primary\"\n              active={this.state.tags[tag]}\n              onClick={() => {\n                this.tagClick(tag);\n              }}\n            >\n              {tag}\n            </Button>\n          );\n        })\n      : \"\";\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h3>Edit your Info</h3>\n          </div>\n        </div>\n        <div className=\"col-12 col-md-9\">\n          <Form model=\"feedback\" onSubmit={values => this.handleSubmit(values)}>\n            <Row>\n              <Label htmlFor=\"prefer\" md={2}>\n                Location\n              </Label>\n              {this.state.gps !== undefined && this.state.hideGps === false ? (\n                <Col md={10}>\n                  <Map />\n                </Col>\n              ) : (\n                \"\"\n              )}\n              <Col md={{ size: 10, offset: 2 }}>\n                <Button\n                  style={{ margin: \"10px\" }}\n                  color=\"primary\"\n                  size=\"lg\"\n                  block\n                  onClick={e => this.getCurrentLocation(e)}\n                >\n                  Get location\n                </Button>\n                <Button\n                  style={{ margin: \"10px\" }}\n                  color=\"primary\"\n                  size=\"lg\"\n                  block\n                  onClick={() => {\n                    this.hideGps();\n                  }}\n                >\n                  Hide Location\n                </Button>\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"firstname\" md={2}>\n                First Name\n              </Label>\n              <Col md={10}>\n                <Control.text\n                  model=\".firstname\"\n                  id=\"firstname\"\n                  name=\"firstname\"\n                  placeholder=\"First Name\"\n                  className=\"form-control\"\n                  defaultValue={this.state.firstname}\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(15)\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".firstname\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \"Must be greater than 2 characters\",\n                    maxLength: \"Must be 15 characters or less\"\n                  }}\n                />\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"lastname\" md={2}>\n                Last Name\n              </Label>\n              <Col md={10}>\n                <Control.text\n                  model=\".lastname\"\n                  id=\"lastname\"\n                  name=\"lastname\"\n                  placeholder=\"Last Name\"\n                  className=\"form-control\"\n                  defaultValue={this.state.lastname}\n                />\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"gender\" md={2}>\n                Gender\n              </Label>\n              <Col md={10}>\n                <Control.select\n                  model=\".gender\"\n                  id=\"gender\"\n                  name=\"gender\"\n                  defaultValue={this.state.gender}\n                  className=\"form-control\"\n                >\n                  <option value=\"\"></option>\n                  <option value=\"male\">male</option>\n                  <option value=\"female\">female</option>\n                </Control.select>\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"prefer\" md={2}>\n                Preference\n              </Label>\n              <Col md={10}>\n                <Control.select\n                  model=\".prefer\"\n                  id=\"prefer\"\n                  name=\"prefer\"\n                  defaultValue={this.state.prefer}\n                  className=\"form-control\"\n                >\n                  <option value=\"\"></option>\n                  <option value=\"male\">male</option>\n                  <option value=\"female\">female</option>\n                  <option value=\"bi\">Bi-sexual</option>\n                </Control.select>\n              </Col>\n            </Row>\n            {/*               <Row>\n                <Label htmlFor=\"dof\" md={2}>\n                  Day of Birth\n                </Label>\n                <Col md={10}>\n                  <input type=\"date\" id=\"dof\" name=\"dof\"\n                    min=\"1970-01-01\" max=\"2018-12-31\" />\n                </Col>\n              </Row> */}\n            <Row className=\"form-group\">\n              <Label htmlFor=\"age\" md={2}>\n                Age\n              </Label>\n              <Col md={10}>\n                <Control\n                  model=\".age\"\n                  id=\"age\"\n                  name=\"age\"\n                  defaultValue={this.state.age}\n                  className=\"form-control\"\n                ></Control>\n              </Col>\n            </Row>\n            <Row>\n              <Label htmlFor=\"tags\" md={2}>\n                Tags\n              </Label>\n              <Col md={10}>{renderTags}</Col>\n            </Row>\n\n            {/* <Row className=\"form-group\">\n                <Label htmlFor=\"tags\" md={2}>\n                  Interests\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".tags\"\n                    id=\"tags\"\n                    name=\"tags\"\n                    placeholder=\"Tags with #\"\n                    defaultValue={this.state.tags}\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row> */}\n            {/* <Row className=\"form-group\">\n                <Label htmlFor=\"tags\" md={2}>\n                  Contact Tel.\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".tags\"\n                    id=\"tags\"\n                    name=\"tags\"                \n                    placeholder=\"Tags with #\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".tags\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 numbers\",\n                      maxLength: \"Must be 15 numbers or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n                </Col>\n              </Row> */}\n            <Row className=\"form-group\">\n              <Label htmlFor=\"email\" md={2}>\n                Email\n              </Label>\n              <Col md={10}>\n                <Control.text\n                  model=\".email\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  className=\"form-control\"\n                  defaultValue={this.state.email}\n                  validators={{\n                    required,\n                    validEmail\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".email\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    validEmail: \"Invalid Email Address\"\n                  }}\n                />\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"biography\" md={2}>\n                Biography\n              </Label>\n              <Col md={10}>\n                <Control.textarea\n                  model=\".biography\"\n                  id=\"biography\"\n                  name=\"biography\"\n                  rows=\"12\"\n                  className=\"form-control\"\n                  defaultValue={this.state.biography}\n                />\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Col md={{ size: 10, offset: 2 }}>\n                <Button type=\"submit\" color=\"primary\">\n                  Confirm\n                </Button>\n              </Col>\n            </Row>\n            {/* <Upload gallery={this.props.info.gallery !== [] ? this.props.info.gallery:null}/> */}\n            <Upload\n              gallery={\n                this.props.info !== null ? this.props.info.gallery : null\n              }\n              username={\n                this.props.info !== null ? this.props.info.username : \"\"\n              }\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport { Media, Modal, ModalHeader } from \"reactstrap\";\nimport Profile from \"./Profile\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nexport default class Notification extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      profile: null\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    //this.RenderProfile = this.RenderProfile.bind(this);\n  }\n\n  componentDidMount() {}\n\n  componentWillMount() {\n    this.setState({ profile: this.props.profile });\n    //console.log(\"this.props.noti: \" + JSON.stringify(this.state.noties));\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  fetchProfile = username => {\n    return fetch(baseUrl + `users/edit/${username}`)\n      .then(\n        response => {\n          if (response.ok) {\n            return response;\n          } else {\n            var error = new Error(\n              \"Error \" + response.status + \": \" + response.statusText\n            );\n            error.response = response;\n            throw error;\n          }\n        },\n        error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n        }\n      )\n      .then(response => response.json())\n      .then(profile => {\n        //console.log(\"fetchProfile:\" + profile);\n        console.log(\"Profile: \" + JSON.stringify(profile));\n        this.setState({ profile: profile });\n        this.toggleModal();\n      })\n      .catch(error => console.log(error.message));\n  };\n\n  RenderNoti(noti) {\n    //console.log(`noti: ${JSON.stringify(noti)} \\nid: ${id}`)\n    let bcolor = noti.unread ? \"#76FF03\" : \"\";\n\n    return (\n      <div\n        className=\"card\"\n        style={{ borderColor: bcolor }}\n        onClick={e => {\n          if (noti.unread) this.props.checkNoti(this.props.noti._id, noti.date);\n          e.preventDefault();\n        }}\n      >\n        <Media tag=\"li\">\n          <Media left middle>\n            <Media\n              style={{ height: \"100px\" }}\n              object\n              src={baseUrl + noti.image}\n              alt={noti.from}\n            />\n          </Media>\n          <Media body className=\"ml-5\">\n            <Media heading>{noti.from}</Media>\n            <p>{noti.type}</p>\n\n            <span\n              className=\"col-auto fa fa-address-card fa-lg\"\n              style={{ color: \"#6A1B9A\" }}\n              onClick={e => {\n                this.fetchProfile(noti.from);\n                //this.props.fetchProfile(noti.from);\n                e.preventDefault();\n              }}\n            />\n          </Media>\n        </Media>\n      </div>\n    );\n  }\n  render() {\n    const noties =\n      this.props.noti !== null && this.props.noti.comments.length !== 0 ? (\n        this.props.noti.comments.map(noti => {\n          return (\n            <div\n              key={this.props.noti.comments.indexOf(noti)}\n              className=\"col-12 mt-5\"\n            >\n              {this.RenderNoti(noti)}\n            </div>\n          );\n        })\n      ) : (\n        <h1 className=\"text-center\" style={{ margin: \"40px\" }}>\n          No notification\n        </h1>\n      );\n    return (\n      <div>\n        {noties}\n        {/* <Profile profile={this.state.profile} isModalOpen={this.state.isModalOpen}/> */}\n        <div>\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n            <ModalHeader toggle={this.toggleModal}>Profile</ModalHeader>\n            <Profile\n              profile={this.state.profile}\n              postFavorite={this.props.postFavorite}\n            />\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  Jumbotron,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport { baseUrl } from \"../shared/baseUrl\";\nconst noti = io(baseUrl + \"noti\");\nconst chatnoti = io(baseUrl + \"chatnoti\");\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      isNavOpen: false,\n      isModalOpen: false,\n      isSignupOpen: false,\n      chatrooms: null\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleSignup = this.handleSignup.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      let str = this.props.auth.user.username;\n      noti.on(str, data => {\n        alert(data);\n        this.props.fetchNoties(JSON.parse(localStorage.creds).username);\n      });\n    }\n  }\n\n  /* shouldComponentUpdate() {\n    console.log(\n      \"this.props.chatRooms chouldComponentUpdate\" +\n        JSON.stringify(this.props.uchats)\n    );\n  } */\n\n  componentWillReceiveProps() {\n    if (\n      this.state.chatrooms === null &&\n      this.props.chatrooms !== null &&\n      this.props.chatrooms !== undefined\n    ) {\n      let chatrooms = Object.values(this.props.chatrooms);\n      //console.log(\"this.props.chatrooms\" + chatrooms);\n      this.setState({ chatrooms });\n      localStorage.setItem(\"chatrooms\", chatrooms);\n\n      let str = this.props.auth.user.username;\n      chatnoti.on(str, data => {\n        //console.log(\"chatnoti from Head:\" + data + `keys:${chatrooms}`);\n        if (localStorage.inChatroom === \"false\")\n          this.props.fetchUchat(chatrooms);\n      });\n    }\n    //console.log(\"this.props.uchats.unread\" + JSON.stringify(this.props.uchats));\n  }\n\n  componentWillUnmount() {}\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  toggleSignup() {\n    this.setState({\n      isSignupOpen: !this.state.isSignupOpen\n    });\n  }\n\n  handleLogin(event) {\n    this.toggleModal();\n    this.props.loginUser({\n      username: this.username.value,\n      password: this.password.value\n    });\n    event.preventDefault();\n  }\n\n  handleSignup(event) {\n    this.toggleSignup();\n    this.props.registerUser({\n      username: this.username.value,\n      password: this.password.value,\n      firstname: this.firstname.value,\n      lastname: this.lastname.value,\n      email: this.email.value\n    });\n    event.preventDefault();\n  }\n\n  handleLogout() {\n    noti.removeAllListeners();\n    chatnoti.removeAllListeners();\n    this.props.logoutUser();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {/* <Navbar dark expand=\"md\"> */}\n        <Navbar dark expand=\"md\">\n          <div className=\"container\">\n            <NavbarToggler onClick={this.toggleNav}>\n              {/* <span className=\"fa fa-list fa-lg\">\n                <span className=\"badge badge-danger\">\n                  {this.props.uchats + this.props.unread !== 0\n                    ? this.props.uchats + this.props.unread\n                    : \"\"}\n                </span>\n              </span> */}\n            </NavbarToggler>\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\n              <img\n                src=\"assets/images/logo.png\"\n                height=\"30\"\n                width=\"41\"\n                alt=\"Ristorante Con Fusion\"\n              />\n              <NavLink className=\"nav-link\" to=\"/home\"></NavLink>\n            </NavbarBrand>\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/menu\">\n                    <span className=\"fa fa-heart fa-lg\" /> Connected\n                    <span className=\"badge badge-danger\">\n                      {this.props.uchats !== 0 ? this.props.uchats : \"\"}\n                    </span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/chat\">\n                    <span className=\"fa fa-bell fa-lg\" /> Notifications\n                    <span className=\"badge badge-danger\">\n                      {this.props.unread !== 0 ? this.props.unread : \"\"}\n                    </span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\n                    <span className=\"fa fa-address-card fa-lg\" /> Profile\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  {!this.props.auth.isAuthenticated ? (\n                    <div>\n                      <Button\n                        outline\n                        onClick={this.toggleModal}\n                        style={{\n                          margin: \"10px\",\n                          color: \"#ffc107\",\n                          borderColor: \"transparent\"\n                        }}\n                      >\n                        <span className=\"fa fa-sign-in fa-lg\" /> Login\n                        {this.props.auth.isFetching ? (\n                          <span className=\"fa fa-spinner fa-pulse fa-fw\" />\n                        ) : null}\n                      </Button>\n                      <Button\n                        outline\n                        onClick={this.toggleSignup}\n                        style={{\n                          margin: \"10px\",\n                          color: \"#ffc107\",\n                          borderColor: \"transparent\"\n                        }}\n                      >\n                        <span className=\"fa fa-sign-in fa-lg\" /> Signup\n                        {this.props.auth.isFetching ? (\n                          <span className=\"fa fa-spinner fa-pulse fa-fw\" />\n                        ) : null}\n                      </Button>\n                    </div>\n                  ) : (\n                    <div>\n                      <div className=\"navbar-text mr-3\">\n                        {this.props.auth.user.username}\n                      </div>\n                      <Button outline onClick={this.handleLogout}>\n                        <span className=\"fa fa-sign-out fa-lg\" /> Logout\n                        {this.props.auth.isFetching ? (\n                          <span className=\"fa fa-spinner fa-pulse fa-fw\" />\n                        ) : null}\n                      </Button>\n                    </div>\n                  )}\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n\n        <Jumbotron className=\"d-none d-md-block\">\n          <div className=\"container\">\n            <div className=\"row row-header\">\n              <div className=\"col-12 col-sm-6\">\n                <NavLink\n                  className=\"nav-link\"\n                  to=\"/home\"\n                  style={{ color: \"floralwhite\" }}\n                >\n                  <h1>42 Match</h1>\n                  <p>Wanna Have Fun?!</p>\n                </NavLink>\n              </div>\n            </div>\n          </div>\n        </Jumbotron>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  innerRef={input => (this.username = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  innerRef={input => (this.password = input)}\n                />\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    name=\"remember\"\n                    innerRef={input => (this.remember = input)}\n                  />\n                  Remember me\n                </Label>\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Login\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n        <Modal isOpen={this.state.isSignupOpen} toggle={this.toggleSignup}>\n          <ModalHeader toggle={this.toggleSignup}>Signup</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleSignup}>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  innerRef={input => (this.username = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  innerRef={input => (this.password = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"username\">First name</Label>\n                <Input\n                  type=\"text\"\n                  id=\"firstname\"\n                  name=\"fisrtname\"\n                  innerRef={input => (this.firstname = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"username\">Last name</Label>\n                <Input\n                  type=\"text\"\n                  id=\"lastname\"\n                  name=\"lastname\"\n                  innerRef={input => (this.lastname = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"username\">email</Label>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  innerRef={input => (this.email = input)}\n                />\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Signup\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { ModalBody } from \"reactstrap\";\n\nimport { baseUrl } from \"../shared/baseUrl\";\nimport io from \"socket.io-client\";\n//import {Launcher} from 'react-chat-window'\n//const chat = io(\"https://localhost:3443/chat\");\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: []\n    };\n  }\n\n  pushChat(message) {\n    return fetch(baseUrl + \"chat/\" + this.props.chatId, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        from: JSON.parse(localStorage.creds).username,\n        to: this.props.to,\n        message: message\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.json())\n      .then(response => {\n        //console.log(\"pushChat\" + response.comments);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  readChat = () => {\n    return fetch(baseUrl + `chat/unread?chatId=${this.props.chatId}`)\n      .then(\n        response => {\n          if (response.ok) {\n            return response;\n          } else {\n            var error = new Error(\n              \"Error \" + response.status + \": \" + response.statusText\n            );\n            error.response = response;\n            throw error;\n          }\n        },\n        error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n        }\n      )\n      .then(response => response.json())\n      .then(response => {\n        //console.log(\"fetchProfile:\" + profile);\n        //console.log(\"Profile: \" + JSON.stringify(response));\n      })\n      .catch(error => console.log(error.message));\n  };\n\n  getChat() {\n    return fetch(baseUrl + \"chat/\" + this.props.chatId)\n      .then(response => response.json())\n      .then(response => {\n        //console.log(\"response.comments \" + response.comments);\n        this.setState({ comments: response.comments });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentWillMount() {\n    console.log(\"chatId\" + this.props.chatId);\n    this.setState({ chat: io(baseUrl + \"chat\") });\n    this.getChat();\n    this.readChat();\n    localStorage.inChatroom = true;\n  }\n\n  componentDidMount() {\n    this.state.chat.on(this.props.chatId, data => {\n      console.log(`chatRoom ${this.props.chatId} data: ${data}`);\n      if (data.split(\",\")[0] === JSON.parse(localStorage.creds).username) {\n        console.log(\"Excute checkUchat\");\n        this.readChat();\n      }\n      this.getChat();\n      //this.props.fetchNoties(JSON.parse(localStorage.creds).username);\n    });\n  }\n\n  componentWillUnmount() {\n    this.state.chat.disconnect();\n    console.log(localStorage.chatrooms.split(\",\"));\n    this.props.fetchUchat(localStorage.chatrooms.split(\",\"));\n    //console.log(\"fetchUchat: \" + this.props.fetchUchat);\n    localStorage.inChatroom = false;\n  }\n\n  render() {\n    //console.log(\"comment \" + JSON.stringify(this.state.comments));\n    const messageList = this.state.comments.map(comment => {\n      let sent = \"sc-message--content received\";\n      if (comment.to === this.props.to) {\n        sent = \"sc-message--content sent\";\n      }\n      return (\n        <div key={comment.date} className=\"sc-message\">\n          <div className={sent}>\n            <div className=\"sc-message--text\">{comment.message}</div>\n          </div>\n        </div>\n      );\n    });\n    return (\n      <ModalBody className=\"sc-chat--window\">\n        <div className=\"sc-message-list\">{messageList}</div>\n        <div className=\"sc-user-input\">\n          <input\n            id=\"chatInput\"\n            type=\"text\"\n            placeholder=\"Write message...\"\n            className=\"sc-user-input--text\"\n            /* onChange={e => {\n              this.setState({ message: e.target.value });\n            }} */\n            onKeyPress={event => {\n              if (event.key === \"Enter\") {\n                this.pushChat(event.target.value);\n                //this.setState({ message: \"\" });\n                document.getElementById(\"chatInput\").value = \"\";\n              }\n            }}\n            value={this.state.message}\n          />\n        </div>\n        {/* <Launcher\n        agentProfile={{\n          teamName: 'react-chat-window',\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n        }}\n        onMessageWasSent={this._onMessageWasSent.bind(this)}\n        messageList={this.state.messageList}\n        showEmoji\n      /> */}\n      </ModalBody>\n    );\n  }\n}\n\nexport default Chatroom;\n","import React, { Component } from \"react\";\nimport Profile from \"./Profile\";\nimport Chatroom from \"./Chatroom\";\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardText,\n  Modal,\n  ModalHeader,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport classnames from \"classnames\";\nimport \"./chat.css\";\n\nclass RenderUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      isChatOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.toggleChat = this.toggleChat.bind(this);\n    this.postDislike = this.postDislike.bind(this);\n    /*     this.readChat = this.readChat.bind(this); */\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  /*   componentWillMount() {\n    console.log(\"this.props.chatroom \" + this.props.chatroom);\n  } */\n\n  toggleChat() {\n    this.setState({\n      isChatOpen: !this.state.isChatOpen\n    });\n  }\n  postDislike = user => {\n    //dispatch(favoritesLoading(true));\n    return fetch(\n      baseUrl + `users/add/dislike?user=${user[0]}&dislike=${user[1]}`\n    )\n      .then(response => {\n        console.log(\"Dislike \" + response.json());\n        window.location.reload();\n      })\n      .catch(error => console.log(error));\n  };\n\n  render() {\n    let bcolor = this.props.user.is_login ? \"#76FF03\" : \"\";\n    //console.log(\"Render user chatroom:\" + JSON.stringify(this.props));\n    return (\n      <div>\n        <style></style>\n        <Card style={{ maxWidth: \"250px\", borderColor: bcolor }}>\n          <CardImg\n            className=\"mouseover img-responsive\"\n            height=\"300px\"\n            overflow=\"hidden\"\n            style={{ objectFit: \"cover\" }}\n            src={baseUrl + this.props.user.profile}\n            alt={this.props.user.username}\n            onClick={e => {\n              e.preventDefault();\n              this.toggleModal();\n            }}\n          />\n          <CardBody>\n            <CardText className=\"row justify-content-center\">\n              <span className=\"col-auto\">{this.props.user.username}</span>\n              {this.props.chatroom ? (\n                <span\n                  className=\"col-auto fa fa-comments fa-lg mouseover\"\n                  onClick={e => {\n                    e.preventDefault();\n                    this.toggleChat();\n                  }}\n                >\n                  {/* <Badge uchats={this.props.uchats} uchatn={this.props.uchats[this.props.chatroom]} /> */}\n                  <span\n                    className=\"badge badge-pill badge-danger\"\n                    style={{ height: \"21px\" }}\n                  >\n                    {this.props.uchats &&\n                    this.props.uchats[this.props.chatroom] !== 0\n                      ? this.props.uchats[this.props.chatroom]\n                      : \"\"}\n                  </span>\n                </span>\n              ) : (\n                \"\"\n              )}\n              {this.props.like ? (\n                <span\n                  onClick={e => {\n                    e.preventDefault();\n                    this.props.postFavorite([\n                      JSON.parse(localStorage.creds).username,\n                      this.props.user.username\n                    ]);\n                  }}\n                  className=\"col-auto fa fa-heart fa-lg mouseover\"\n                  style={{ color: \"#E91E63\" }}\n                />\n              ) : (\n                \"\"\n              )}\n              {this.props.dislike ? (\n                <span\n                  className=\"col-auto fa fa-close fa-lg mouseover\"\n                  onClick={e => {\n                    e.preventDefault();\n                    this.postDislike([\n                      JSON.parse(localStorage.creds).username,\n                      this.props.user.username\n                    ]);\n                  }}\n                />\n              ) : (\n                \"\"\n              )}\n            </CardText>\n          </CardBody>\n        </Card>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Profile</ModalHeader>\n          <Profile\n            profile={this.props.user}\n            postFavorite={this.props.postFavorite}\n            like={this.props.like}\n          />\n        </Modal>\n        <Modal isOpen={this.state.isChatOpen} toggle={this.toggleChat}>\n          <ModalHeader toggle={this.toggleChat} className=\"sc-header\">\n            Chat\n          </ModalHeader>\n          <Chatroom\n            chatId={this.props.chatroom}\n            to={this.props.user.username}\n            fetchUchat={this.props.fetchUchat}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default class Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: \"1\"\n    };\n    //this.renderList = this.renderList.bind(this);\n  }\n\n  /* renderList(user) {\n    <div key={user._id} className=\"col-9 mx-auto col-md-6 col-lg-4 my-1\">\n      <RenderUser\n        user={user}\n        postFavorite={this.props.postFavorite}\n        username={this.props.username}\n      />\n    </div>;\n  } */\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  render() {\n    //console.log(\"Connected props:\" + JSON.stringify(this.props.chatrooms));\n    const connectedlist =\n      this.props.users.connected !== undefined\n        ? this.props.users.connected.map(user => {\n            return (\n              <div\n                key={user._id}\n                className=\"col-9 mx-auto col-md-6 col-lg-4 my-1\"\n              >\n                <RenderUser\n                  user={user}\n                  postFavorite={this.props.postFavorite}\n                  username={this.props.username}\n                  chatroom={this.props.chatrooms[user.username]}\n                  fetchUchat={this.props.fetchUchat}\n                  uchats={this.props.uchats}\n                  like={false}\n                  dislike={true}\n                />\n              </div>\n            );\n          })\n        : null;\n    const likedbylist =\n      this.props.users.likedby !== undefined\n        ? this.props.users.likedby.map(user => {\n            return (\n              <div\n                key={user._id}\n                className=\"col-9 mx-auto col-md-6 col-lg-4 my-1\"\n              >\n                <RenderUser\n                  user={user}\n                  postFavorite={this.props.postFavorite}\n                  username={this.props.username}\n                  like={true}\n                  dislike={false}\n                />\n              </div>\n            );\n          })\n        : null;\n    const likelist =\n      this.props.users.like !== undefined\n        ? this.props.users.like.map(user => {\n            return (\n              <div\n                key={user._id}\n                className=\"col-9 mx-auto col-md-6 col-lg-4 my-1\"\n              >\n                <RenderUser\n                  user={user}\n                  postFavorite={this.props.postFavorite}\n                  username={this.props.username}\n                  dislike={true}\n                />\n              </div>\n            );\n          })\n        : null;\n    const checkedbylist =\n      this.props.users.checkedby !== undefined\n        ? this.props.users.checkedby.map(user => {\n            return (\n              <div\n                key={user._id}\n                className=\"col-9 mx-auto col-md-6 col-lg-4 my-1\"\n              >\n                <RenderUser\n                  user={user}\n                  postFavorite={this.props.postFavorite}\n                  username={this.props.username}\n                  like={true}\n                  dislike={false}\n                />\n              </div>\n            );\n          })\n        : null;\n\n    if (this.props.users.isLoading) {\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <Loading />\n          </div>\n        </div>\n      );\n    } else if (this.props.users.errMess) {\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <h4>{this.props.users.errMess}</h4>\n          </div>\n        </div>\n      );\n    } else\n      return (\n        <div className=\"container\">\n          <Nav tabs className=\"row\">\n            <NavItem className=\"col-auto\">\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"1\" })}\n                onClick={() => {\n                  this.toggle(\"1\");\n                }}\n              >\n                Connected\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"col-auto\">\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"2\" })}\n                onClick={() => {\n                  this.toggle(\"2\");\n                }}\n              >\n                Your fan\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"col-auto\">\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"3\" })}\n                onClick={() => {\n                  this.toggle(\"3\");\n                }}\n              >\n                Your Star\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"col-auto\">\n              <NavLink\n                className={classnames({ active: this.state.activeTab === \"4\" })}\n                onClick={() => {\n                  this.toggle(\"4\");\n                }}\n              >\n                Your stalker\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={this.state.activeTab}>\n            <TabPane tabId=\"1\">\n              <div className=\"row\">{connectedlist}</div>\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <div className=\"row\">{likedbylist}</div>\n            </TabPane>\n            <TabPane tabId=\"3\">\n              <div className=\"row\">{likelist}</div>\n            </TabPane>\n            <TabPane tabId=\"4\">\n              <div className=\"row\">{checkedbylist}</div>\n            </TabPane>\n          </TabContent>\n        </div>\n      );\n  }\n}\n/* {this.props.uchats &&\n  this.props.uchats[this.props.chatroom] !== 0\n    ? this.props.uchats[this.props.chatroom]\n    : \"\"} */\n","export const InitialFeedback = {\n  username: \"\",\n  firstname: \"\",\n  lastname: \"\",\n  password: \"\",\n  gender: \"\",\n  preference: \"\",\n  email: \"\",\n  gps: false,\n  biography: \"\",\n  age: \"\",\n  tags: []\n};\n\nexport const InitialFilter = {\n  genre: \"age\",\n  genres: [\n    { id: 1, name: \"age\" },\n    { id: 2, name: \"distance\" },\n    { id: 3, name: \"common tags\" },\n    { id: 4, name: \"ratings\" }\n  ],\n  age: {\n    label: \"age\",\n    min: 0,\n    max: 60,\n    step: 1,\n    value: { min: 20, max: 40 }\n  },\n  fame: {\n    label: \"fame\",\n    min: 0,\n    max: 100,\n    step: 10,\n    value: { min: 0, max: 100 }\n  },\n  distance: {\n    label: \"distance\",\n    min: 0,\n    max: 300,\n    step: 10,\n    value: { min: 0, max: 120 }\n  },\n  comtags: {\n    label: \"comtags\",\n    min: 0,\n    max: 10,\n    step: 1,\n    value: { min: 0, max: 2 }\n  },\n  gps: { lat: 37.802235, lng: -119.8792 },\n  tags: '[\"tag1\", \"tag2\", \"tag3\", \"tag4\"]',\n  prefer: \"bi\"\n};\n\n/* export const InitialFilter = {\n  ageS: 40,\n  ageL: 0,\n  fameS: 100,\n  fameL: 0,\n  distanceS: 300,\n  distanceL: 0,\n  comtags: 0,\n  gps: { lat: 37.802235, lng: -119.8792 },\n  tags: '[\"tag1\", \"tag2\", \"tag3\", \"tag4\"]'\n}; */\n","import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { actions } from \"react-redux-form\";\n\n//users\n/* export const fetchUsers = () => dispatch => {\n  dispatch(usersLoading(true));\n  return fetch(baseUrl + \"users\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(users => dispatch(addUsers(users)))\n    .catch(error => dispatch(usersFailed(error.message)));\n}; */\n\n/* export const myAction = () => (dispatch, getState) => {\n  const { items } = getState().info;\n  console.log(items);\n}; */\n\nexport const fetchFilter = filter => (dispatch, getState) => {\n  filter.prefer = getState().info.info.prefer;\n  filter.gps = getState().info.info.gps;\n  filter.username = getState().info.info.username;\n  filter.likelist = getState().info.info.like;\n  filter.tags = getState().info.info.tags;\n  dispatch(actions.change(\"filter\", filter));\n};\n\nexport const fetchUsers = filter => dispatch => {\n  dispatch(usersLoading(true));\n  return fetch(baseUrl + \"users/filtered\", {\n    method: \"POST\",\n    body: JSON.stringify(filter),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n    //credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(users => {\n      dispatch(addUsers(users));\n    })\n    .catch(error => dispatch(usersFailed(error.message)));\n};\n\n/* export const fetchUsers = () => dispatch => {\n  dispatch(usersLoading(true));  \n  return fetch(baseUrl + \"users\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(users => dispatch(addUsers(users)))\n    .catch(error => dispatch(usersFailed(error.message)));\n}; */\n\nexport const usersLoading = () => ({\n  type: ActionTypes.USERS_LOADING\n});\n\nexport const usersFailed = errmess => ({\n  type: ActionTypes.USERS_FAILED,\n  payload: errmess\n});\n\nexport const addUsers = users => ({\n  type: ActionTypes.ADD_USERS,\n  payload: users\n});\n\n// Edit Info\nexport const fetchInfo = username => (dispatch, getState) => {\n  dispatch(infoLoading(true));\n  return (\n    fetch(baseUrl + \"users/edit/\" + username)\n      .then(\n        response => {\n          if (response.ok) {\n            return response;\n          } else {\n            var error = new Error(\n              \"Error \" + response.status + \": \" + response.statusText\n            );\n            error.response = response;\n            throw error;\n          }\n        },\n        error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n        }\n      )\n      .then(response => response.json())\n      //.then(info => dispatch(addInfo(info)))\n      .then(info => {\n        dispatch(fetchFavorites(info));\n        dispatch(fetchUchat(Object.values(info.chatrooms)));\n        dispatch(addInfo(info));\n        let filter = getState().filter;\n        dispatch(\n          fetchUsers({\n            ...filter,\n            username: info.username,\n            likelist: info.like,\n            gps: info.gps,\n            tag: info.tags,\n            prefer: info.prefer\n          })\n        );\n        //console.log(\"getState().info \" + JSON.stringify(info));\n      })\n      .catch(error => dispatch(infoFailed(error.message)))\n  );\n};\n\nexport const infoLoading = () => ({\n  type: ActionTypes.INFO_LOADING\n});\n\nexport const infoFailed = errmess => ({\n  type: ActionTypes.INFO_FAILED,\n  payload: errmess\n});\n\nexport const addInfo = info => ({\n  type: ActionTypes.ADD_INFO,\n  payload: info\n});\n\n//export const postFeedback = feedback => dispatch => {\nexport const postFeedback = feedback => dispatch => {\n  return fetch(baseUrl + \"users/edit\", {\n    method: \"POST\",\n    body: JSON.stringify(feedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n    //credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        console.log(\"action:\" + JSON.stringify(response));\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response => {\n      console.log(\"Feedback\", response);\n      alert(\"Thank you for your feedback!\\n\" + JSON.stringify(response));\n      dispatch(addInfo(response));\n      window.location.href = \"localhost:3001/home\";\n    })\n    .catch(error => {\n      console.log(\"Feedback\", error.message);\n      alert(\"Your feedback could not be posted\\nError: \" + error.message);\n    });\n};\n\nexport const requestLogin = creds => {\n  return {\n    type: ActionTypes.LOGIN_REQUEST,\n    creds\n  };\n};\n\nexport const receiveLogin = response => {\n  return {\n    type: ActionTypes.LOGIN_SUCCESS,\n    token: response.token\n  };\n};\n\nexport const loginError = message => {\n  return {\n    type: ActionTypes.LOGIN_FAILURE,\n    message\n  };\n};\n\nexport const loginUser = creds => dispatch => {\n  dispatch(requestLogin(creds));\n  console.log(\"loginUser is excuted\" + JSON.stringify(creds));\n\n  return fetch(baseUrl + \"users/login\", {\n    method: \"POST\",\n    //mode:'no-cors',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(creds)\n  })\n    .then(\n      response => {\n        //console.log(\"response: \" + JSON.stringify(response));\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response => {\n      console.log(\"response: \" + response);\n      if (response.success) {\n        localStorage.setItem(\"token\", response.token);\n        localStorage.setItem(\"creds\", JSON.stringify(creds));\n        localStorage.setItem(\"inChatroom\", false);\n        /* let str = creds.username;      \n        noti.on(str, (data) => {            \n          console.log(\"getting data:\" + JSON.stringify(data));          \n        }); */\n        //dispatch(fetchInfo(creds.username));\n        //dispatch(fetchFavorites());\n        dispatch(receiveLogin(response));\n        window.location.reload();\n      } else {\n        var error = new Error(response.status);\n        error.response = response;\n        throw error;\n      }\n    })\n    .catch(error => {\n      alert(error.message);\n      dispatch(loginError(error.message));\n    });\n};\n\nexport const registerError = message => {\n  return {\n    type: ActionTypes.REGISTER_FAILURE,\n    message\n  };\n};\n\nexport const registerUser = creds => dispatch => {\n  return fetch(baseUrl + \"users/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(creds)\n  })\n    .then(\n      response => {\n        console.log(\"response at top:\" + JSON.stringify(response));\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        console.log(\"err at top:\" + JSON.stringify(error));\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response => {\n      //console.log(\"response at bottom:\" + JSON.stringify(response));\n      if (response.success) {\n        alert(\"You are signed up! Verify with your email account!\");\n      } else {\n        var error = new Error(\"Error \" + response.status);\n        if (response.err.code === 11000) {\n          alert(\"The email address is already exists\");\n        } else {\n          alert(response.err.message);\n        }\n        error.response = response.err;\n        throw error;\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      dispatch(registerError(error.message));\n    });\n};\n\nexport const requestLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_REQUEST\n  };\n};\n\nexport const receiveLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_SUCCESS\n  };\n};\n\n// Logs the user out\nexport const logoutUser = () => dispatch => {\n  return fetch(\n    baseUrl + `users/logout?username=${JSON.parse(localStorage.creds).username}`\n  )\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(info => {\n      dispatch(requestLogout());\n      localStorage.clear();\n      //dispatch(favoritesFailed(\"Error 401: Unauthorized\"));\n      dispatch(receiveLogout());\n      window.location.reload();\n    })\n    .catch(error => console.log(error));\n\n  //window.location.href = \"localhost:3001/home\";\n};\n\nexport const postFavorite = users => dispatch => {\n  if (!localStorage.creds) {\n    alert(\"You need to log on first\");\n  } else {\n    //dispatch(favoritesLoading(true));\n    return fetch(baseUrl + \"users/add/like\", {\n      method: \"POST\",\n      body: JSON.stringify({ user: users[0], data: users[1] }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n        //Authorization: bearer\n      }\n      //credentials: \"same-origin\"\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.message === \"Already Liked\") {\n          alert(`You already liked  ${users[1]}.`);\n        } else {\n          alert(`We sent message to ${users[1]}. Lets see you would be liked!`);\n          window.location.reload();\n        }\n      })\n      .catch(error => {\n        //dispatch(favoritesFailed(error.message));\n        console.log(error);\n      });\n  }\n};\n\nexport const postDislike = user => {\n  //dispatch(favoritesLoading(true));\n  return fetch(baseUrl + `users/add/dislike?user=${user[0]}&dislike=${user[1]}`)\n    .then(response => response.json())\n    .then(response => {\n      console.log(\"Dislike \", user);\n      window.location.reload();\n    })\n    .catch(error => console.log(error));\n};\n\nexport const fetchFavorites = info => dispatch => {\n  dispatch(favoritesLoading(true));\n  return fetch(baseUrl + \"users/lusers\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      connected: info.connected,\n      likedby: info.likedby,\n      checkedby: info.checkedby,\n      like: info.like\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(lusers => {\n      dispatch(addFavorites(lusers));\n    })\n    .catch(error => dispatch(favoritesFailed(error.message)));\n};\n\nexport const favoritesLoading = () => ({\n  type: ActionTypes.FAVORITES_LOADING\n});\n\nexport const favoritesFailed = errmess => ({\n  type: ActionTypes.FAVORITES_FAILED,\n  payload: errmess\n});\n\nexport const addFavorites = favorites => ({\n  type: ActionTypes.ADD_FAVORITES,\n  payload: favorites\n});\n\n//fetchNoti\nexport const checkNoti = (notiId, date) => dispatch => {\n  return fetch(baseUrl + `noti/${notiId}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      date: date\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n      //Authorization: bearer\n    }\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(noties => {\n      console.log(\"fetchNoti response:\" + JSON.stringify(noties));\n      dispatch(addNoties(noties));\n    })\n    .catch(error => dispatch(notiesFailed(error.message)));\n  //.catch(error => console.log(error));\n};\n\nexport const fetchNoties = notiId => dispatch => {\n  dispatch(notiesLoading(true));\n  return fetch(baseUrl + `noti/${notiId}`)\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(noties =>\n      //console.log(\"fetchNoti response:\" + JSON.stringify(noties));\n      {\n        let unread = 0;\n        noties[\"comments\"].forEach(noti => {\n          if (noti[\"unread\"]) unread += 1;\n        });\n        noties[\"unread\"] = unread;\n        dispatch(addNoties(noties));\n      }\n    )\n    .catch(error => dispatch(notiesFailed(error.message)));\n};\n\nexport const notiesLoading = () => ({\n  type: ActionTypes.NOTIES_LOADING\n});\n\nexport const notiesFailed = errmess => ({\n  type: ActionTypes.NOTIES_FAILED,\n  payload: errmess\n});\n\nexport const addNoties = noties => ({\n  type: ActionTypes.ADD_NOTIES,\n  payload: noties\n});\n\nexport const fetchProfile = username => dispatch => {\n  dispatch(profileLoading(true));\n  return fetch(baseUrl + `users/edit/${username}`)\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(profile => {\n      console.log(\"fetchProfile:\" + profile);\n      dispatch(addProfile(profile));\n    })\n    .catch(error => dispatch(profileFailed(error.message)));\n};\n\nexport const profileLoading = () => ({\n  type: ActionTypes.PROFILE_LOADING\n});\n\nexport const profileFailed = errmess => ({\n  type: ActionTypes.PROFILE_FAILED,\n  payload: errmess\n});\n\nexport const addProfile = profile => ({\n  type: ActionTypes.ADD_PROFILE,\n  payload: profile\n});\n\n//unreadChat\nexport const fetchUchat = chatIds => dispatch => {\n  dispatch(uchatLoading(true));\n  return fetch(baseUrl + \"chat/unread\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username: JSON.parse(localStorage.creds).username,\n      chatIds: chatIds\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(uchats =>\n      //console.log(\"fetchNoti response:\" + JSON.stringify(uchat));\n      {\n        Object.values(uchats).reduce((a, b) => a + b, 0);\n        uchats[\"unread\"] = Object.values(uchats).reduce((a, b) => a + b, 0);\n        dispatch(addUchat(uchats));\n      }\n    )\n    .catch(error => dispatch(uchatFailed(error.message)));\n};\n\nexport const uchatLoading = () => ({\n  type: ActionTypes.UCHAT_LOADING\n});\n\nexport const uchatFailed = errmess => ({\n  type: ActionTypes.UCHAT_FAILED,\n  payload: errmess\n});\n\nexport const addUchat = uchat => ({\n  type: ActionTypes.ADD_UCHAT,\n  payload: uchat\n});\n\nexport const checkChat = (chatId, date) => dispatch => {\n  return fetch(baseUrl + `chat/${chatId}`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      date: date\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n      //Authorization: bearer\n    }\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(chats => {\n      console.log(\"fetchNoti response:\" + JSON.stringify(chats));\n      dispatch(addUchat(chats));\n    })\n    .catch(error => dispatch(uchatFailed(error.message)));\n};\n\n/* export const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\n\nexport const postComment = (dishId, rating, comment) => dispatch => {\n  const newComment = {\n    dish: dishId,\n    rating: rating,\n    comment: comment\n  };\n  console.log(\"Comment \", newComment);\n\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n  return fetch(baseUrl + dishId + \"/comments\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    },\n    credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => {\n      console.log(\"Post comments \", error.message);\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\n    });\n}; */\n\n/* export const fetchComments = () => dispatch => {\n  return fetch(baseUrl + \"comments\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\n\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n}); */\n\n/* export const fetchLusers = users => dispatch => {\n  dispatch(lusersLoading(true));\n  return fetch(baseUrl + \"users/lusers\", {\n    method: \"POST\",\n    body: JSON.stringify({ users: users }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(lusers => {\n      dispatch(addLusers(lusers));\n    })\n    .catch(error => dispatch(lusersFailed(error.message)));\n};\n\nexport const lusersLoading = () => ({\n  type: ActionTypes.LUSERS_LOADING\n});\n\nexport const lusersFailed = errmess => ({\n  type: ActionTypes.LUSERS_FAILED,\n  payload: errmess\n});\n\nexport const addLusers = lusers => ({\n  type: ActionTypes.ADD_LUSERS,\n  payload: lusers\n});*/\n\n/* export const fetchFavorites = username => dispatch => {\n  dispatch(favoritesLoading(true));\n  return fetch(baseUrl + `users/${username}/likedby`)\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(likedby => {\n      console.log(\"likedby at action creator:\" + likedby);\n      dispatch(fetchLusers(likedby));\n      dispatch(addFavorites(likedby));\n    })\n    .catch(error => dispatch(favoritesFailed(error.message)));\n};\n */\n","\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\nexport const INFO_LOADING = \"INFO_LOADING\";\nexport const INFO_FAILED = \"INFO_FAILED\";\nexport const ADD_INFO = \"ADD_INFO\";\nexport const USERS_LOADING = \"USERS_LOADING\";\nexport const USERS_FAILED = \"USERS_FAILED\";\nexport const ADD_USERS = \"ADD_USERS\";\n\nexport const FAVORITES_LOADING = \"FAVORITES_LOADING\";\nexport const FAVORITES_FAILED = \"FAVORITES_FAILED\";\nexport const ADD_FAVORITES = \"ADD_FAVORITES\";\n\nexport const LUSERS_LOADING = \"LUSERS_LOADING\";\nexport const LUSERS_FAILED = \"LUSERS_FAILED\";\nexport const ADD_LUSERS = \"ADD_LUSERS\";\n\nexport const NOTIES_LOADING = \"NOTIES_LOADING\";\nexport const NOTIES_FAILED = \"NOTIES_FAILED\";\nexport const ADD_NOTIES = \"ADD_NOTIES\";\n\nexport const UCHAT_LOADING = \"UCHAT_LOADING\";\nexport const UCHAT_FAILED = \"UCHAT_FAILED\";\nexport const ADD_UCHAT = \"ADD_UCHAT\";\n\nexport const PROFILE_LOADING = \"PROFILE_LOADING\";\nexport const PROFILE_FAILED = \"PROFILE_FAILED\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\n","import React, { Component } from \"react\";\nimport User from \"./UserList\";\nimport Contact from \"./ContactComponent\";\nimport Notification from \"./Notification\";\nimport Header from \"./HeaderComponent\";\n\nimport Connected from \"./Connected\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { InitialFilter } from \"../redux/forms\";\n//import { actions } from 'react-redux-form';\nimport {\n  postFeedback,\n  loginUser,\n  logoutUser,\n  fetchInfo,\n  registerUser,\n  fetchFavorites,\n  postFavorite,\n  fetchUsers,\n  fetchNoties,\n  checkNoti,\n  fetchUchat,\n  postDislike,\n  fetchFilter\n} from \"../redux/ActionCreators\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst mapStateToProps = state => {\n  return {\n    uchats: state.uchats,\n    noties: state.noties,\n    lusers: state.lusers,\n    users: state.users,\n    info: state.info,\n    favorites: state.favorites,\n    auth: state.auth,\n    filter: state.filter\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  postFeedback: feedback => dispatch(postFeedback(feedback)),\n  fetchInfo: username => dispatch(fetchInfo(username)),\n  fetchUsers: filter => dispatch(fetchUsers(filter)),\n  loginUser: creds => dispatch(loginUser(creds)),\n  registerUser: creds => dispatch(registerUser(creds)),\n  fetchNoties: username => dispatch(fetchNoties(username)),\n  logoutUser: () => dispatch(logoutUser()),\n  fetchFavorites: username => dispatch(fetchFavorites(username)),\n  postFavorite: users => dispatch(postFavorite(users)),\n  checkNoti: (notiId, date) => dispatch(checkNoti(notiId, date)),\n  fetchUchat: chatIds => dispatch(fetchUchat(chatIds)),\n  postDislike: user => dispatch(postDislike(user)),\n  fetchFilter: filter => dispatch(fetchFilter(filter))\n\n  // postBlacklist: user => dispatch(postBlacklist(user))\n  //fetchProfile: (username) => dispatch(fetchProfile(username))\n});\n\nclass Main extends Component {\n  componentWillMount() {\n    //console.log(\"main filter props=\" + JSON.stringify(this.props.filter));\n\n    if (this.props.auth.user !== null) {\n      this.props.fetchInfo(this.props.auth.user.username);\n      this.props.fetchNoties(this.props.auth.user.username);\n      //this.props.fetchUsers({...InitialFilter, username:this.props.auth.user.username});\n      //this.props.fetchUsers({...InitialFilter, username:this.props.auth.user.username});\n      //this.props.fetchFavorites(this.props.auth.user.username);\n    } else {\n      this.props.fetchUsers(InitialFilter);\n    }\n  }\n  componentDidMount() {\n    //console.log(\"filter from main \" + JSON.stringify(this.props.filter));\n  }\n\n  render() {\n    const PrivateRoute = ({ component: Component, ...rest }) => (\n      <Route\n        {...rest}\n        render={props =>\n          this.props.auth.isAuthenticated ? (\n            <Component {...props} />\n          ) : (\n            <div>\n              {alert(\"Please Log in first\")}\n              <Redirect\n                to={{\n                  pathname: \"/home\",\n                  state: {\n                    from: props.location\n                  }\n                }}\n              />\n            </div>\n          )\n        }\n      />\n    );\n\n    return (\n      <div>\n        <Header\n          auth={this.props.auth}\n          loginUser={this.props.loginUser}\n          logoutUser={this.props.logoutUser}\n          registerUser={this.props.registerUser}\n          unread={\n            this.props.noties.noties ? this.props.noties.noties.unread : false\n          }\n          uchats={\n            this.props.uchats.uchats ? this.props.uchats.uchats.unread : null\n          }\n          fetchNoties={this.props.fetchNoties}\n          fetchUchat={this.props.fetchUchat}\n          //info={this.props.info.info ? this.props.info.info : null}\n          chatrooms={\n            this.props.info.info ? this.props.info.info.chatrooms : null\n          }\n        />\n        <TransitionGroup>\n          <CSSTransition\n            key={this.props.location.key}\n            classNames=\"page\"\n            timeout={300}\n          >\n            <Switch>\n              <Route\n                exact\n                path=\"/home\"\n                component={() => (\n                  <User\n                    username={\n                      this.props.auth.isAuthenticated\n                        ? this.props.auth.user.username\n                        : null\n                    }\n                    likelist={\n                      this.props.auth.isAuthenticated\n                        ? this.props.info.info\n                        : null\n                    }\n                    users={this.props.users}\n                    postFavorite={this.props.postFavorite}\n                    //postBlacklist={this.props.postBlacklist}\n                    fetchUsers={this.props.fetchUsers}\n                    fetchFilter={this.props.fetchFilter}\n                    filter={this.props.filter}\n                  />\n                )}\n              />\n              } />\n              <PrivateRoute\n                exact\n                path=\"/menu\"\n                component={() => (\n                  <Connected\n                    chatrooms={\n                      this.props.info.info !== null\n                        ? this.props.info.info.chatrooms\n                        : null\n                    }\n                    users={this.props.favorites.favorites}\n                    postFavorite={this.props.postFavorite}\n                    postDislike={this.props.postDislike}\n                    fetchUchat={this.props.fetchUchat}\n                    uchats={this.props.uchats.uchats}\n                  />\n                )}\n              />\n              {/* <Route path=\"/menu/:dishId\" component={DishWithId} /> */}\n              <PrivateRoute\n                exact\n                path=\"/chat\"\n                component={() => (\n                  <Notification\n                    username={\n                      this.props.auth.isAuthenticated\n                        ? this.props.auth.user.username\n                        : null\n                    }\n                    noti={this.props.noties.noties}\n                    checkNoti={this.props.checkNoti}\n                    fetchProfile={this.props.fetchProfile}\n                    postFavorite={this.props.postFavorite}\n                  />\n                )}\n              />\n              {/* <PrivateRoute\n                exact\n                path=\"/chat\"\n                component={() => (\n                  <Chat                    \n                  />\n                )}\n              /> */}\n              <PrivateRoute\n                exact\n                path=\"/contactus\"\n                component={() => (\n                  <Contact\n                    postFeedback={this.props.postFeedback}\n                    fetchInfo={this.props.fetchInfo}\n                    info={this.props.info.info ? this.props.info.info : null}\n                  />\n                )}\n              />\n              <Redirect to=\"/home\" />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        {/* <Footer /> */}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Main)\n);\n","import * as ActionTypes from './ActionTypes';\n\nexport const Info = (state = {\n        isLoading: true,\n        errMess: null,\n        info: null,\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_INFO:\n            return {...state, isLoading: false, errMess: null, info: action.payload};\n\n        case ActionTypes.INFO_LOADING:\n            return {...state, isLoading: true, errMess: null, info: null};\n\n        case ActionTypes.INFO_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, info: null};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Noties = (state  = { isLoading: true,\n                                    errMess: null,\n                                    noties:null}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_NOTIES:\n        return {...state, isLoading: false, errMess: null, noties: action.payload};\n\n        case ActionTypes.NOTIES_LOADING:\n            return {...state, isLoading: true, errMess: null, noties: null}\n\n        case ActionTypes.NOTIES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n    }\n};","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Uchats = (\n  state = { isLoading: true, errMess: null, uchats: null },\n  action\n) => {\n  switch (action.type) {\n    case ActionTypes.ADD_UCHAT:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        uchats: action.payload\n      };\n\n    case ActionTypes.UCHAT_LOADING:\n      return { ...state, isLoading: true, errMess: null, uchats: null };\n\n    case ActionTypes.UCHAT_FAILED:\n      return { ...state, isLoading: false, errMess: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Profile = (state = {\n        isLoading: true,\n        errMess: null,\n        profile: null,\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_PROFILE:\n            return {...state, isLoading: false, errMess: null, profile: action.payload};\n\n        case ActionTypes.PROFILE_LOADING:\n            return {...state, isLoading: true, errMess: null, profile: null};\n\n        case ActionTypes.PROFILE_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, profile: null};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Favorites = (\n  state = {\n    isLoading: true,\n    errMess: null,\n    favorites: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case ActionTypes.ADD_FAVORITES:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        favorites: action.payload\n      };\n\n    case ActionTypes.FAVORITES_LOADING:\n      return { ...state, isLoading: true, errMess: null, favorites: {} };\n\n    case ActionTypes.FAVORITES_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: action.payload,\n        favorites: {}\n      };\n\n    default:\n      return state;\n  }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Lusers = (state = {\n        isLoading: true,\n        errMess: null,\n        lusers: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_LUSERS:\n            return {...state, isLoading: false, errMess: null, lusers: action.payload};\n\n        case ActionTypes.LUSERS_LOADING:\n            return {...state, isLoading: true, errMess: null, lusers: []};\n\n        case ActionTypes.LUSERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, lusers: []};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n// The auth reducer. The starting state sets authentication\n// based on a token being in local storage. In a real app,\n// we would also want a util to check if the token is expired.\nexport const Auth = (state = {\n        isLoading: false,\n        isAuthenticated: localStorage.getItem('token') ? true : false,\n        token: localStorage.getItem('token'),\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\n        errMess: null\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: false,\n                user: action.creds\n            };\n        case ActionTypes.LOGIN_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: true,\n                errMess: '',\n                token: action.token\n            };\n        case ActionTypes.LOGIN_FAILURE:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                errMess: action.message\n            };\n        case ActionTypes.LOGOUT_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: true\n            };\n        case ActionTypes.LOGOUT_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                token: '',\n                user: null\n            };\n        default:\n            return state\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Users = (state = {\n        isLoading: true,\n        errMess: null,\n        users: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_USERS:\n            return {...state, isLoading: false, errMess: null, users: action.payload};\n\n        case ActionTypes.USERS_LOADING:\n            return {...state, isLoading: true, errMess: null, users: []};\n\n        case ActionTypes.USERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, users: []};\n\n        default:\n            return state;\n    }\n}","import React, { Component } from \"react\";\nimport Main from \"./components/MainComponent\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./redux/configureStore\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nrequire(\"dotenv\").config();\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createForms } from \"react-redux-form\";\nimport { Info } from \"./info\";\nimport { Noties } from \"./noties\";\nimport { Uchats } from \"./uchats\";\nimport { Profile } from \"./profile\";\nimport { Favorites } from \"./favorites\";\nimport { Lusers } from \"./lusers\";\nimport { Auth } from \"./auth\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { InitialFeedback, InitialFilter } from \"./forms\";\nimport { Users } from \"./users\";\n\nexport const ConfigureStore = () => {\n  const store = createStore(\n    combineReducers({\n      profile: Profile,\n      noties: Noties,\n      uchats: Uchats,\n      users: Users,\n      lusers: Lusers,\n      info: Info,\n      auth: Auth,\n      favorites: Favorites,\n      ...createForms({\n        feedback: InitialFeedback,\n        filter: InitialFilter\n      })\n    }),\n    applyMiddleware(thunk, logger)\n  );\n\n  return store;\n};\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}